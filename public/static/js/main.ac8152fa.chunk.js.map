{"version":3,"sources":["posts/components/Welcome.js","shared/hooks/http-hook.js","shared/context/auth-context.js","posts/components/DeleteCommentDialog.js","posts/components/Comment.js","App.js","posts/components/CommentsList.js","posts/components/Post.js","posts/components/PostsList.js","posts/pages/MainPage.js","posts/components/PostLite.js","posts/pages/PendingPosts.js","shared/components/Toolbar.js","user/pages/Login.js","user/pages/Register.js","user/pages/UserProfile.js","user/pages/AccessDenied.js","shared/context/alert-context.js","posts/pages/CreatePost.js","reportWebVitals.js","index.js"],"names":["Welcome","props","style","margin","Paper","className","padding","elevation","fontSize","text","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","AuthContext","createContext","userId","userFirstName","userType","isLoggedIn","token","login","logout","DeleteCommentDialog","React","open","setOpen","handleClose","alignSelf","onMouseEnter","document","getElementById","cursor","onMouseLeave","onClick","Dialog","onClose","DialogContent","DialogContentText","id","DialogActions","Button","callback","autoFocus","logoutTimer","Comment","auth","useContext","deleteHandler","process","postID","Authorization","refreshComments","display","flexDirection","paddingLeft","flexGrow","creatorID","firstName","lastName","comment","_id","CommentsList","comments","map","Post","setComments","newComment","setNewComment","showComments","setShowComments","navigate","useNavigate","keyDownHandler","event","keyCode","JSON","stringify","fontWeight","marginLeft","marginRight","title","creator","Avatar","src","image","author","date","time","substring","year","month","day","convertMongoDate","postBody","Divider","length","TextField","onKeyDown","value","onChange","target","fullWidth","placeholder","PostsList","posts","post","content","createdAt","MainPage","setPosts","busy","setBusy","fetchData","reversedPosts","reverse","Collapse","in","successAlert","Alert","variant","severity","size","LinearProgress","PostLite","fontStyle","float","PendingPosts","pendingPosts","setPendingPosts","currentPost","setCurrentPost","currentPostIndex","setCurrentPostIndex","numPendingPosts","numPosts","setNumPosts","reloadPosts","setReloadPosts","console","log","approveHandler","rejectHandler","Pagination","page","count","Toolbar","loginTheme","createTheme","palette","primary","main","registerTheme","AppBar","Box","ThemeProvider","theme","Typography","textDecoration","color","component","Link","to","Login","enteredEmail","setEnteredEmail","enteredPassword","setEnteredPassword","loginFailed","setLoginFailed","handleSubmit","preventDefault","shouldLogin","email","password","userName","Container","maxWidth","CssBaseline","sx","marginTop","alignItems","m","bgcolor","onSubmit","noValidate","mt","required","label","name","autoComplete","type","FormControlLabel","control","Checkbox","Grid","item","xs","mb","container","href","Register","enteredFName","setEnteredFName","enteredLName","setEnteredLName","emailInUse","setEmailInUse","FormData","currentTarget","responseData2","spacing","sm","justifyContent","UserProfile","useParams","user","setUser","AccessDenied","AlertContext","setAlert","CreatePost","convertedText","setConvertedText","enteredTitle","setEnteredTitle","alert","postSubmitHandler","backgroundColor","marginBottom","App","setToken","setUserId","setUserType","setUserFirstName","tokenExpirationDate","setTokenExpirationDate","setSuccessAlert","userVerified","setUserVerified","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","currentDate","remainingTokenTime","setTimeout","clearTimeout","getFirstName","storedData","parse","getItem","routes","postSubmitted","exact","path","element","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","alertOptions","position","positions","TOP_CENTER","timeout","offset","transition","transitions","FADE","alertStyle","borderRadius","boxShadow","fontFamily","width","boxSizing","ReactDOM","render","StrictMode","template","options","close","flex","remove"],"mappings":"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","file":"static/js/main.ac8152fa.chunk.js","sourcesContent":["import Paper from \"@mui/material/Paper\";\r\nimport \"./Welcome.css\";\r\n\r\nconst Welcome = (props) => {\r\n  return (\r\n    <div style={{ margin: \"50px\" }}>\r\n      <Paper className=\"center-div\" style={{ padding: \"30px\" }} elevation={2}>\r\n        <p style={{ fontSize: \"1.25rem\" }}>{props.text}</p>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import { useState, useCallback, useEffect, useRef } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        throw err;\r\n      }\r\n      setIsLoading(false);\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  userId: null,\r\n  userFirstName: null,\r\n  userType: null,\r\n  isLoggedIn: false,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nexport default function DeleteCommentDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setOpen(false);\r\n    props.callback();\r\n  };\r\n\r\n  return (\r\n    <div style={{ alignSelf: \"center\" }}>\r\n      <DeleteIcon\r\n        onMouseEnter={() => {\r\n          document.getElementById(\"root\").style.cursor = \"pointer\";\r\n        }}\r\n        onMouseLeave={() => {\r\n          document.getElementById(\"root\").style.cursor = null;\r\n        }}\r\n        onClick={handleClickOpen}\r\n      />\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete your comment?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>No</Button>\r\n          <Button onClick={handleDelete} autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useContext, useCallback } from \"react\";\r\nimport DeleteCommentDialog from \"./DeleteCommentDialog\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst Comment = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { sendRequest } = useHttpClient();\r\n\r\n  // sends request to server to delete a comment\r\n  const deleteHandler = useCallback(async () => {\r\n    const responseData = await sendRequest(\r\n      `${process.env.REACT_APP_SERVER_URL}/posts/${props.postID}/comments/${props.id}`,\r\n      \"DELETE\",\r\n      null,\r\n      {\r\n        Authorization: \"Bearer \" + auth.token,\r\n      }\r\n    );\r\n    props.refreshComments(responseData);\r\n  }, [sendRequest, auth.token, props]);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\" }} key={props.id}>\r\n      <p style={{ paddingLeft: \"20px\", flexGrow: \"1\" }}>\r\n        {!!props.creatorID && (\r\n          <strong>\r\n            {`${props.creatorID.firstName} ${props.creatorID.lastName}`}:{\" \"}\r\n          </strong>\r\n        )}\r\n        {props.comment}\r\n      </p>\r\n      {(auth.userType === \"admin\" ||\r\n        auth.userId === props.creatorID._id ||\r\n        auth.userId === props.creatorID._id) && (\r\n        <DeleteCommentDialog callback={deleteHandler} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport \"./App.css\";\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport MainPage from \"./posts/pages/MainPage\";\nimport PendingPosts from \"./posts/pages/PendingPosts\";\nimport Toolbar from \"./shared/components/Toolbar\";\nimport Login from \"./user/pages/Login\";\nimport Register from \"./user/pages/Register\";\nimport UserProfile from \"./user/pages/UserProfile\";\nimport AccessDenied from \"./user/pages/AccessDenied\";\nimport CreatePost from \"./posts/pages/CreatePost\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { AlertContext } from \"./shared/context/alert-context\";\nimport { useHttpClient } from \"./shared/hooks/http-hook\";\nimport { useAlert } from \"react-alert\";\n\nlet logoutTimer;\n\nconst App = () => {\n  const { sendRequest } = useHttpClient();\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState();\n  const [userType, setUserType] = useState();\n  const [userFirstName, setUserFirstName] = useState();\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [successAlert, setSuccessAlert] = useState(false);\n  const [userVerified, setUserVerified] = useState(false);\n\n  const login = useCallback(\n    (userId, token, userFirstName, userType, expirationDate) => {\n      setUserVerified(token === \"unverified\" ? false : true);\n      setToken(token);\n      setUserId(userId);\n      setUserFirstName(userFirstName);\n      setUserType(userType);\n\n      const tokenExpirationDate =\n        expirationDate || new Date(new Date().getTime() + 3600000);\n\n      setTokenExpirationDate(tokenExpirationDate);\n\n      localStorage.setItem(\n        \"userData\",\n        JSON.stringify({\n          userId: userId,\n          token: token,\n          expiration: tokenExpirationDate.toISOString(),\n        })\n      );\n    },\n    []\n  );\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setTokenExpirationDate(null);\n    setUserFirstName(null);\n    setUserType(null);\n    setUserVerified(false);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  // calculate time remaining on existing token\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const currentDate = new Date();\n      const remainingTokenTime =\n        tokenExpirationDate.getTime() - currentDate.getTime();\n      logoutTimer = setTimeout(logout, remainingTokenTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  const getFirstName = useCallback(\n    async (userId) => {\n      let responseData;\n      try {\n        responseData = await sendRequest(\n          `${process.env.REACT_APP_SERVER_URL}/users/${userId}`,\n          \"GET\"\n        );\n      } catch (err) {}\n      setUserFirstName(responseData.firstName);\n      setUserType(responseData.userType);\n    },\n    [sendRequest]\n  );\n\n  // auto-login\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (storedData) {\n      getFirstName(storedData.userId);\n    }\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        userFirstName,\n        userType,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login, getFirstName, userFirstName, userType]);\n\n  const postSubmitted = useCallback(() => {\n    setSuccessAlert(true);\n    setTimeout(() => {\n      setSuccessAlert(false);\n    }, 5000);\n  }, []);\n\n  let routes;\n  if (token !== \"unverified\" && userType === \"admin\") {\n    routes = (\n      <Fragment>\n        <Routes>\n          <Route exact path=\"/users/:id\" element={<UserProfile />} />\n          <Route\n            path=\"/\"\n            element={<MainPage successAlert={successAlert} />}\n            exact\n          />\n          <Route path=\"/create\" element={<CreatePost />} exact />\n          <Route\n            path=\"/login\"\n            element={<MainPage successAlert={successAlert} />}\n            exact\n          />\n          <Route path=\"/publish\" element={<PendingPosts />} exact />\n        </Routes>\n      </Fragment>\n    );\n  } else if (token !== \"unverified\" && userVerified) {\n    routes = (\n      <Fragment>\n        <Routes>\n          <Route path=\"/users/:id\" element={<UserProfile />} />\n          <Route\n            path=\"/\"\n            element={<MainPage successAlert={successAlert} />}\n            exact\n          />\n          <Route path=\"/create\" element={<CreatePost />} exact />\n          <Route\n            path=\"/login\"\n            element={<MainPage successAlert={successAlert} />}\n            exact\n          />\n          <Route path=\"/publish\" element={<AccessDenied />} exact />\n        </Routes>\n      </Fragment>\n    );\n  } else {\n    routes = (\n      <Fragment>\n        <Routes>\n          <Route\n            exact\n            path=\"/users/:id\"\n            element={\n              token === \"unverified\" ? <UserProfile /> : <AccessDenied />\n            }\n          />\n          <Route path=\"/\" element={<MainPage />} exact />\n          <Route path=\"/create\" element={<AccessDenied />} exact />\n          <Route path=\"/login\" element={<Login />} exact />\n          <Route path=\"/register\" element={<Register />} exact />\n          <Route path=\"/publish\" element={<AccessDenied />} exact />\n        </Routes>\n      </Fragment>\n    );\n  }\n\n  return (\n    <AlertContext.Provider\n      value={{\n        setAlert: postSubmitted,\n      }}\n    >\n      <AuthContext.Provider\n        value={{\n          userId: userId,\n          userFirstName: userFirstName,\n          userType: userType,\n          isLoggedIn: !!token,\n          token: token,\n          login: login,\n          logout: logout,\n        }}\n      >\n        <Router>\n          <Toolbar />\n          <div className=\"main\">{routes}</div>\n        </Router>\n      </AuthContext.Provider>\n    </AlertContext.Provider>\n  );\n};\n\nexport default App;\n","import Comment from \"./Comment\";\r\n\r\nconst CommentsList = (props) => {\r\n  return (\r\n    <div>\r\n      {props.comments.map((comment) => (\r\n        <Comment\r\n          refreshComments={props.refreshComments}\r\n          postID={props.postID}\r\n          key={comment._id || comment.id}\r\n          id={comment._id || comment.id}\r\n          comment={comment.comment}\r\n          creatorID={comment.creatorID}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentsList;\r\n","import { Paper, Avatar, Divider, TextField } from \"@mui/material\";\r\nimport { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport CommentsList from \"./CommentsList\";\r\nimport \"./Post.css\";\r\n\r\nconst Post = (props) => {\r\n  const { sendRequest } = useHttpClient();\r\n  const [comments, setComments] = useState(props.comments);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [showComments, setShowComments] = useState(false);\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  // set state of showing comments\r\n  const commentsClickHandler = () => {\r\n    setShowComments(!showComments);\r\n  };\r\n\r\n  const newCommentHandler = (event) => {\r\n    setNewComment(event.target.value);\r\n  };\r\n\r\n  const refreshComments = async (comments) => {\r\n    setComments(comments);\r\n  };\r\n\r\n  // allows user to submit comment with enter key\r\n  const keyDownHandler = async (event) => {\r\n    if (event.keyCode === 13) {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/posts/${props.id}/comments/add`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          comment: newComment,\r\n          creatorID: auth.userId,\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      setNewComment(\"\");\r\n      setComments(responseData);\r\n    }\r\n  };\r\n\r\n  const convertMongoDate = (date) => {\r\n    let time = date.substring(11, 16);\r\n    let year = date.substring(0, 4);\r\n    let month = date.substring(5, 7);\r\n    let day = date.substring(8, 10);\r\n    return `${time} ${month}/${day}/${year}`;\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"50px\" }}>\r\n      <Paper className=\"center-div\" style={{ padding: \"30px\" }} elevation={2}>\r\n        <div className=\"title\">\r\n          <div className=\"post-header\">\r\n            <p\r\n              style={{\r\n                fontSize: \"24px\",\r\n                fontWeight: \"500\",\r\n                marginLeft: \"20px\",\r\n                marginRight: \"50px\",\r\n              }}\r\n            >\r\n              {props.title}\r\n            </p>\r\n            <div\r\n              className=\"user\"\r\n              onMouseEnter={() => {\r\n                document.getElementById(\"root\").style.cursor = \"pointer\";\r\n              }}\r\n              onMouseLeave={() => {\r\n                document.getElementById(\"root\").style.cursor = null;\r\n              }}\r\n              onClick={() => {\r\n                navigate(`/users/${props.creator._id || props.creator.id}`);\r\n              }}\r\n            >\r\n              <div className=\"p\">\r\n                <Avatar\r\n                  src={`${process.env.REACT_APP_STATIC_URL}${props.creator.image}`}\r\n                />\r\n              </div>\r\n              <p\r\n                style={{\r\n                  fontSize: \"14px\",\r\n                  fontWeight: \"600\",\r\n                  paddingLeft: \"10px\",\r\n                }}\r\n              >\r\n                {props.author}\r\n              </p>\r\n            </div>\r\n            <div style={{ flexGrow: \"1\" }}></div>\r\n            <p style={{ fontSize: \"18px\", marginRight: \"20px\" }}>\r\n              {convertMongoDate(props.date)}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          {props.postBody}\r\n        </div>\r\n        <Divider style={{ margin: \"15px\" }} />\r\n        <p\r\n          onMouseEnter={() => {\r\n            document.getElementById(\"root\").style.cursor = \"pointer\";\r\n          }}\r\n          onMouseLeave={() => {\r\n            document.getElementById(\"root\").style.cursor = null;\r\n          }}\r\n          onClick={commentsClickHandler}\r\n        >\r\n          Comments ({comments.length})\r\n        </p>\r\n        {showComments && (\r\n          <>\r\n            {comments.length > 0 && (\r\n              <CommentsList\r\n                refreshComments={refreshComments}\r\n                postID={props.id}\r\n                comments={comments}\r\n              />\r\n            )}\r\n            {!auth.isLoggedIn && comments.length === 0 && (\r\n              <p style={{ display: \"inline-block\", paddingLeft: \"20px\" }}>\r\n                No comments yet, log in to post one.\r\n              </p>\r\n            )}\r\n            {!auth.isLoggedIn && comments.length > 0 && (\r\n              <p style={{ display: \"inline-block\", paddingLeft: \"20px\" }}>\r\n                Log in to join the conversation.\r\n              </p>\r\n            )}\r\n            {auth.token === \"unverified\" && comments.length > 0 && (\r\n              <p style={{ display: \"inline-block\", paddingLeft: \"20px\" }}>\r\n                Verify your account to join the conversation.\r\n              </p>\r\n            )}\r\n            {auth.isLoggedIn && auth.token !== \"unverified\" && (\r\n              <TextField\r\n                onKeyDown={keyDownHandler}\r\n                value={newComment}\r\n                onChange={newCommentHandler}\r\n                fullWidth\r\n                placeholder=\"Type your comment and hit enter\"\r\n                style={{ display: \"inline-flex\" }}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { Markup } from \"interweave\";\r\nimport Post from \"./Post\";\r\n\r\nconst PostsList = (props) => {\r\n  return (\r\n    <>\r\n      {props.posts.map((post) => (\r\n        <Post\r\n          key={post._id || post.id}\r\n          id={post._id || post.id}\r\n          title={post.title}\r\n          postBody={<Markup content={post.postBody} />}\r\n          comments={post.comments}\r\n          date={post.createdAt}\r\n          author={`${post.creatorID.firstName} ${post.creatorID.lastName}`}\r\n          creator={post.creatorID}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostsList;\r\n","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Button, LinearProgress, Alert, Collapse } from \"@mui/material\";\r\nimport Welcome from \"../components/Welcome\";\r\nimport PostsList from \"../components/PostsList\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"../../shared/style.css\";\r\n\r\nconst MainPage = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [posts, setPosts] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n  const [pendingPosts, setPendingPosts] = useState();\r\n  const [busy, setBusy] = useState(false);\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setBusy(true);\r\n    let responseData;\r\n    try {\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/posts/all`,\r\n        \"GET\"\r\n      );\r\n    } catch (err) {}\r\n    const reversedPosts = responseData.reverse();\r\n    setPosts(reversedPosts);\r\n    setBusy(false);\r\n  }, [sendRequest]);\r\n\r\n  // Retrieve all posts when mounted\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n  const welcomeString =\r\n    \"Vitae tortor condimentum lacinia quis vel eros donec ac. Duis at consectetur lorem donec massa. Sollicitudin ac orci phasellus egestas tellus rutrum tellus. Elit ut aliquam purus sit. Quisque egestas diam in arcu cursus euismod.\";\r\n\r\n  return (\r\n    <>\r\n      {/* {props.successAlert && ( */}\r\n      <Collapse in={props.successAlert}>\r\n        <Alert variant=\"filled\" severity=\"success\">\r\n          Your post has been submitted! All posts must go through our moderation\r\n          team before being published.\r\n        </Alert>\r\n      </Collapse>\r\n      {/* )} */}\r\n      <Collapse in={!props.successAlert}>\r\n        {auth.isLoggedIn && auth.token != \"unverified\" && (\r\n          <div className=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              onClick={() => {\r\n                navigate(\"/create\");\r\n              }}\r\n            >\r\n              Create Post\r\n            </Button>\r\n          </div>\r\n        )}\r\n        {auth.token === \"unverified\" && (\r\n          <Alert severity=\"info\" variant=\"filled\">\r\n            Welcome to The Blog! Please ask Andrew to verify your account to\r\n            start posting and commenting (email verification under\r\n            construction).\r\n          </Alert>\r\n        )}\r\n      </Collapse>\r\n      {auth.userType === \"admin\" && (\r\n        <div className=\"center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            onClick={() => {\r\n              navigate(\"/publish\");\r\n            }}\r\n          >\r\n            Moderate Posts\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Welcome text={welcomeString} />\r\n      {busy ? <LinearProgress /> : <PostsList posts={posts} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import Paper from \"@mui/material/Paper\";\r\nimport \"./Post.css\";\r\n\r\nconst PostLite = (props) => {\r\n  const convertMongoDate = (date) => {\r\n    // 2021-12-02T18:28:33.463Z\r\n    let time = date.substring(11, 16);\r\n    let year = date.substring(0, 4);\r\n    let month = date.substring(5, 7);\r\n    let day = date.substring(8, 10);\r\n    return `${time} ${month}/${day}/${year}`;\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"50px\" }}>\r\n      <Paper className=\"center-div\" style={{ padding: \"30px\" }} elevation={2}>\r\n        <div className=\"post-header\">\r\n          <p\r\n            style={{\r\n              fontSize: \"24px\",\r\n              fontWeight: \"500\",\r\n              marginLeft: \"20px\",\r\n              marginRight: \"50px\",\r\n            }}\r\n          >\r\n            {props.title}\r\n          </p>\r\n          <p style={{ fontSize: \"14px\", fontStyle: \"italic\" }}>\r\n            {props.author}\r\n          </p>\r\n          <p style={{ fontSize: \"18px\", float: \"right\", marginRight: \"20px\" }}>\r\n            {convertMongoDate(props.date)}\r\n          </p>\r\n        </div>\r\n        <p\r\n          style={{\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          {props.postBody}\r\n        </p>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostLite;\r\n","import { Markup } from \"interweave\";\r\nimport {\r\n  LinearProgress,\r\n  Container,\r\n  Pagination,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport PostLite from \"../components/PostLite\";\r\nimport Welcome from \"../components/Welcome\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst PendingPosts = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [pendingPosts, setPendingPosts] = useState([]); // need this\r\n  const [currentPost, setCurrentPost] = useState(); // need this\r\n  const [currentPostIndex, setCurrentPostIndex] = useState(0); // might not need\r\n  const [numPosts, setNumPosts] = useState(props.numPendingPosts); // need this\r\n  const [reloadPosts, setReloadPosts] = useState(false); // might not need\r\n  const [busy, setBusy] = useState(true);\r\n\r\n  // get pending posts\r\n  useEffect(() => {\r\n    setBusy(true);\r\n    let responseData;\r\n    const fetchData = async () => {\r\n      try {\r\n        responseData = await sendRequest(\r\n          `${process.env.REACT_APP_SERVER_URL}/posts/pending/all`,\r\n          \"GET\",\r\n          null,\r\n          { Authorization: \"Bearer \" + auth.token }\r\n        );\r\n      } catch (err) {\r\n        console.log(\"Fetch all posts: \" + err.message);\r\n      } finally {\r\n        console.log(responseData);\r\n        if (responseData.length === 0) {\r\n          setNumPosts(0);\r\n          setPendingPosts([]);\r\n          setCurrentPost();\r\n        } else {\r\n          if (responseData.length !== numPosts) {\r\n            setNumPosts(responseData.length);\r\n          }\r\n          setPendingPosts(responseData);\r\n          setCurrentPost(responseData[currentPostIndex]);\r\n        }\r\n        setBusy(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [reloadPosts, auth.token, currentPostIndex, numPosts, sendRequest]);\r\n\r\n  const approveHandler = async () => {\r\n    let responseData;\r\n    try {\r\n      setBusy(true);\r\n      // add post to published posts\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/posts/publish/${currentPost.id}`,\r\n        \"PUT\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(\"Approve post: \" + err.message);\r\n    } finally {\r\n      setBusy(false);\r\n      setReloadPosts(!reloadPosts);\r\n    }\r\n  };\r\n\r\n  const rejectHandler = async () => {\r\n    let responseData;\r\n    try {\r\n      setBusy(true);\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/posts/${currentPost.id}`,\r\n        \"DELETE\",\r\n        {\r\n          creatorID: currentPost.creatorID._id,\r\n        },\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(\"Reject post: \" + err.message);\r\n    } finally {\r\n      setBusy(false);\r\n      setReloadPosts(!reloadPosts);\r\n    }\r\n  };\r\n\r\n  const handlePagination = (event, page) => {\r\n    setCurrentPostIndex(page - 1);\r\n  };\r\n\r\n  return busy ? (\r\n    <div className=\"center-div\">\r\n      <LinearProgress />\r\n    </div>\r\n  ) : numPosts === 0 ? (\r\n    <Welcome text={\"No posts to moderate.\"} />\r\n  ) : (\r\n    <>\r\n      <Welcome\r\n        text={`You currently have ${numPosts} pending posts. When all posts have been evaluated, there may be more.`}\r\n      />\r\n      <PostLite\r\n        key={pendingPosts[currentPostIndex].id}\r\n        title={pendingPosts[currentPostIndex].title}\r\n        postBody={<Markup content={pendingPosts[currentPostIndex].postBody} />}\r\n        date={pendingPosts[currentPostIndex].createdAt}\r\n        author={`${pendingPosts[currentPostIndex].creatorID.firstName} ${pendingPosts[currentPostIndex].creatorID.lastName}`}\r\n      />\r\n      <div className=\"center\">\r\n        <Button size=\"large\" onClick={approveHandler}>\r\n          Approve\r\n        </Button>\r\n        <Button size=\"large\" onClick={rejectHandler}>\r\n          Reject\r\n        </Button>\r\n      </div>\r\n      <div className=\"center\">\r\n        <Pagination\r\n          onChange={handlePagination}\r\n          count={numPosts}\r\n          size=\"large\"\r\n          variant=\"text\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PendingPosts;\r\n","import AppBar from \"@mui/material/AppBar\";\r\nimport ToolBar from \"@mui/material/Toolbar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Toolbar = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const loginTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#ffffff\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const registerTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#ffffff\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const registerClickHandler = () => {\r\n    navigate(\"/register\");\r\n  };\r\n\r\n  const loginClickHandler = () => {\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <AppBar>\r\n      <ToolBar>\r\n        <Box display=\"flex\" flexGrow={1}>\r\n          <ThemeProvider theme={loginTheme}>\r\n            <Typography\r\n              style={{ textDecoration: \"none\" }}\r\n              color=\"primary\"\r\n              component={Link}\r\n              to={\"/\"}\r\n              variant=\"h3\"\r\n            >\r\n              blog.js\r\n            </Typography>\r\n          </ThemeProvider>\r\n        </Box>\r\n        {!auth.isLoggedIn && (\r\n          <>\r\n            <ThemeProvider theme={loginTheme}>\r\n              <Button color=\"primary\" onClick={loginClickHandler}>\r\n                Login\r\n              </Button>\r\n            </ThemeProvider>\r\n            <ThemeProvider theme={registerTheme}>\r\n              <Button color=\"primary\" onClick={registerClickHandler}>\r\n                Register\r\n              </Button>\r\n            </ThemeProvider>\r\n          </>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n          <>\r\n            <p style={{ marginRight: \"30px\" }}>Hello, {auth.userFirstName}</p>\r\n            <ThemeProvider theme={loginTheme}>\r\n              <Button color=\"primary\" onClick={auth.logout}>\r\n                Logout\r\n              </Button>\r\n            </ThemeProvider>\r\n          </>\r\n        )}\r\n      </ToolBar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst theme = createTheme();\r\n\r\nconst Login = () => {\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const [loginFailed, setLoginFailed] = useState(false);\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const navigate = useNavigate();\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoginFailed(false);\r\n    let shouldLogin = true;\r\n    let responseData;\r\n    try {\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/users/login`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n    } catch (err) {\r\n      shouldLogin = false;\r\n      setLoginFailed(true);\r\n    }\r\n    if (shouldLogin) {\r\n      auth.login(\r\n        responseData.userId,\r\n        responseData.token,\r\n        responseData.userName,\r\n        responseData.userType,\r\n        null\r\n      );\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container className=\"mainBody\" component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n            sx={{ mt: 1 }}\r\n          >\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={handleEmailChange}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handlePasswordChange}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            {loginFailed && (\r\n              <Grid item xs={12}>\r\n                <Alert severity=\"error\">\r\n                  Could not find a user with those credentials.\r\n                </Alert>\r\n              </Grid>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"../register\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import * as React from \"react\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst theme = createTheme();\r\n\r\nconst Register = () => {\r\n  const [enteredFName, setEnteredFName] = useState(\"\");\r\n  const [enteredLName, setEnteredLName] = useState(\"\");\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const navigate = useNavigate();\r\n  const [emailInUse, setEmailInUse] = useState(false);\r\n\r\n  const fNameHandler = (event) => {\r\n    setEnteredFName(event.target.value);\r\n  };\r\n  const lNameHandler = (event) => {\r\n    setEnteredLName(event.target.value);\r\n  };\r\n  const passwordHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n  };\r\n  const emailHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    try {\r\n      const responseData2 = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/users/register`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          firstName: enteredFName,\r\n          lastName: enteredLName,\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      console.log(responseData2);\r\n      if (responseData2.message) {\r\n        if (responseData2.message === \"email address already in use\") {\r\n          setEmailInUse(true);\r\n          return;\r\n        }\r\n      }\r\n\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/users/login`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      auth.login(\r\n        responseData.userId,\r\n        responseData.token,\r\n        responseData.userName,\r\n        responseData.userType\r\n      );\r\n    } catch (err) {}\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const login = async () => {};\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"given-name\"\r\n                  name=\"firstName\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  value={enteredFName}\r\n                  onChange={fNameHandler}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"family-name\"\r\n                  value={enteredLName}\r\n                  onChange={lNameHandler}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  value={enteredEmail}\r\n                  onChange={emailHandler}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  value={enteredPassword}\r\n                  onChange={passwordHandler}\r\n                />\r\n              </Grid>\r\n              {emailInUse && (\r\n                <Grid item xs={12}>\r\n                  <Alert severity=\"error\">Email address already in use.</Alert>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/login\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@mui/material\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Welcome from \"../../posts/components/Welcome\";\r\n\r\nconst UserProfile = () => {\r\n  const { id } = useParams();\r\n  const { sendRequest } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [busy, setBusy] = useState(true);\r\n  const [user, setUser] = useState();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setBusy(true);\r\n    let responseData;\r\n    try {\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/users/id/${id}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n    } catch (err) {}\r\n    setUser(responseData);\r\n    console.log(responseData);\r\n    setBusy(false);\r\n  }, [auth.token, id, sendRequest]);\r\n\r\n  // Retrieve user when mounted\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <>\r\n      {busy ? (\r\n        <LinearProgress />\r\n      ) : (\r\n        <Welcome\r\n          text={\r\n            \"This is \" + user.firstName + \" \" + user.lastName + \"'s profile\"\r\n          }\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import Welcome from \"../../posts/components/Welcome\";\r\n\r\nconst AccessDenied = () => {\r\n  const message = \"You do not have permission to access this page.\";\r\n  return (\r\n    <>\r\n      <Welcome text={message} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccessDenied;\r\n","import { createContext } from \"react\";\r\n\r\nexport const AlertContext = createContext({\r\n  setAlert: () => {},\r\n});\r\n","import { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Welcome from \"../../posts/components/Welcome\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { AlertContext } from \"../../shared/context/alert-context\";\r\nimport \"./CreatePost.css\";\r\n\r\nconst CreatePost = (props) => {\r\n  const [convertedText, setConvertedText] = useState(\"\");\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const navigate = useNavigate();\r\n  const auth = useContext(AuthContext);\r\n  const alert = useContext(AlertContext);\r\n\r\n  const titleChangedHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const postChangedHandler = (event) => {\r\n    setConvertedText(event);\r\n  };\r\n\r\n  const fakeTitle = \"Test Post\";\r\n  const fakeBody =\r\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\";\r\n\r\n  const postSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/posts/create`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          title: enteredTitle === \"\" ? fakeTitle : enteredTitle,\r\n          postBody: convertedText === \"\" ? fakeBody : convertedText,\r\n          creatorID: auth.userId,\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      console.log(\"if this runs why doesn't navigate?\");\r\n      alert.setAlert();\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.log(\"Create post error: \" + err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Welcome text=\"\" />\r\n      <form onSubmit={postSubmitHandler}>\r\n        <div style={{ backgroundColor: \"white\" }}>\r\n          <TextField\r\n            autoFocus\r\n            type=\"text\"\r\n            style={{ display: \"flex\", marginBottom: \"1rem\" }}\r\n            id=\"outlined-basic\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Post title...\"\r\n            value={enteredTitle}\r\n            onChange={titleChangedHandler}\r\n          />\r\n        </div>\r\n        <div style={{ backgroundColor: \"white\" }}>\r\n          <ReactQuill\r\n            theme=\"snow\"\r\n            placeholder={\"Start creating your masterpiece...\"}\r\n            value={convertedText}\r\n            onChange={postChangedHandler}\r\n          />\r\n        </div>\r\n        <div className=\"center-div-btn\">\r\n          <Button type=\"submit\" variant=\"contained\" size=\"large\">\r\n            Submit Post\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\n\nconst alertOptions = {\n  position: positions.TOP_CENTER,\n  timeout: 8000,\n  offset: \"0px\",\n  transition: transitions.FADE,\n  type: \"success\",\n};\n\nconst alertStyle = {\n  backgroundColor: \"#FFFFFF\",\n  color: \"black\",\n  padding: \"20px\",\n  borderRadius: \"10px\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  boxShadow: \"0px 2px 2px 2px rgba(0, 0, 0, 0.03)\",\n  fontFamily: \"Arial\",\n  width: \"350px\",\n  boxSizing: \"border-box\",\n};\n\nconst AlertTemplate = ({ message, options, style, close }) => {\n  return (\n    <div style={{ ...alertStyle, ...style }}>\n      <span style={{ flex: 2 }}>{message}</span>\n    </div>\n  );\n};\n\nconst closeAlert = (alert) => {\n  alert.remove(alert);\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate} {...alertOptions}>\n      <App onClick={closeAlert} />\n    </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}