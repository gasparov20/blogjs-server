{"version":3,"sources":["posts/components/Welcome.js","shared/hooks/http-hook.js","shared/context/auth-context.js","posts/components/Comment.js","posts/components/CommentsList.js","posts/components/Post.js","posts/components/PostsList.js","posts/pages/MainPage.js","shared/components/Toolbar.js","user/pages/Login.js","user/pages/Register.js","posts/pages/CreatePost.js","App.js","reportWebVitals.js","index.js","shared/server-config.js"],"names":["Welcome","props","Paper","elevation","style","fontSize","padding","text","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","ok","console","log","Error","message","useEffect","forEach","abortCtrl","abort","clearError","AuthContext","createContext","userName","fullName","userId","userType","isLoggedIn","token","login","logout","Comment","auth","useContext","deleteHandler","process","postID","id","refreshComments","justifyItems","display","creator","comment","float","createdAt","onClick","CommentsList","comments","map","creatorID","Post","setComments","newComment","setNewComment","showComments","setShowComments","fetchData","length","keyDownHandler","event","keyCode","JSON","stringify","marginBottom","paddingBottom","fontWeight","title","fontStyle","marginLeft","author","date","time","substring","year","month","day","convertMongoDate","postBody","Divider","marginTop","onMouseEnter","document","getElementById","cursor","onMouseLeave","TextField","onKeyDown","value","onChange","target","fullWidth","placeholder","PostsList","posts","reverse","post","content","MainPage","setPosts","navigate","useNavigate","Button","loginTheme","createTheme","palette","primary","main","registerTheme","Toolbar","AppBar","position","ThemeProvider","theme","Typography","color","component","Link","to","textDecoration","flex","paddingLeft","variant","Fragment","paddingRight","justifyContent","firstName","Copyright","align","Date","getFullYear","Login","enteredEmail","setEnteredEmail","enteredPassword","setEnteredPassword","handleSubmit","preventDefault","email","password","Container","className","maxWidth","CssBaseline","Box","sx","flexDirection","alignItems","Avatar","m","bgcolor","onSubmit","noValidate","mt","margin","required","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","mb","Grid","container","item","xs","href","Register","enteredFName","setEnteredFName","enteredLName","setEnteredLName","data","FormData","currentTarget","values","lastName","spacing","sm","CreatePost","convertedText","setConvertedText","enteredTitle","setEnteredTitle","postSubmitHandler","nameData","reactions","backgroundColor","size","App","routes","setToken","setUserId","setUsername","setUserType","setFullname","path","element","exact","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.1b1df7f3.chunk.js","sourcesContent":["import Paper from \"@mui/material/Paper\";\r\n\r\nconst Welcome = (props) => {\r\n  return (\r\n    <div>\r\n      <Paper elevation={2}>\r\n        <p style={{ fontSize: \"1.25rem\", padding: \"2rem\" }}>{props.text}</p>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import { useState, useCallback, useEffect, useRef } from 'react'\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    const activeHttpRequests = useRef([]);\r\n\r\n    const sendRequest = useCallback(\r\n        async (url, method = 'GET', body = null, headers = {}) => {\r\n        setIsLoading(true);\r\n        const httpAbortCtrl = new AbortController();\r\n        activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n        try {\r\n        const response = await fetch(url, {\r\n            method,\r\n            body,\r\n            headers,\r\n            signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        if (!response.ok) {\r\n            console.log(response);\r\n            throw new Error(responseData.message);\r\n        }  \r\n        setIsLoading(false);      \r\n        return responseData;        \r\n    } catch (err) {\r\n        setError(err.message);\r\n        throw err;\r\n    }\r\n    setIsLoading(false);\r\n    }, []);\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n        };\r\n    }, []);\r\n\r\n    return { isLoading, error, sendRequest, clearError };\r\n};","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n    userName: null,\r\n    fullName: null,\r\n    userId: null,\r\n    userType: null,\r\n    isLoggedIn: false,\r\n    token: null,\r\n    login: () => {},\r\n    logout: () => {}\r\n});","import { useContext, useState } from 'react'\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { ServerURL } from \"../../shared/server-config\"\r\n\r\nconst Comment = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    // sends request to server to delete a comment\r\n    const deleteHandler = async () => {\r\n        const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_SERVER_URL}/posts/${props.postID}/comments/${props.id}`,\r\n                \"DELETE\"\r\n        );\r\n        props.refreshComments(responseData);\r\n    };\r\n\r\n    return  <div key={props.id} style={{justifyItems:\"center\"}}>\r\n                <p style={{display:\"inline-block\"}}><strong>{props.creator}: </strong>{props.comment}</p><p style={{display: \"inline-block\", float: \"right\"}}>{props.createdAt}</p>\r\n                {((auth.userType==='admin') || (auth.fullName===props.creator)) && (\r\n                <DeleteIcon onClick={deleteHandler} style={{display: \"inline-block\", float: \"right\"}} />\r\n                )}\r\n            </div>\r\n};\r\n\r\nexport default Comment;","import Comment from './Comment'\r\n\r\nconst CommentsList = (props) => {\r\n    return(        \r\n        <div>\r\n        { props.comments.map(comment => (\r\n            <Comment refreshComments={props.refreshComments} postID={props.postID} key={comment.id} id={comment.id} comment={comment.comment} creator={comment.creator} creatorID={comment.creatorID} />\r\n        ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentsList;","import TextField from '@mui/material/TextField'\r\nimport Paper from '@mui/material/Paper'\r\nimport Divider from '@mui/material/Divider'\r\nimport { useState, useEffect, useContext } from 'react';\r\n\r\nimport { useHttpClient } from '../../shared/hooks/http-hook'\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\nimport { ServerURL } from \"../../shared/server-config\"\r\nimport CommentsList from './CommentsList';\r\n\r\nconst Post = (props) => {\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState(\"\");\r\n    const [showComments, setShowComments] = useState(false);\r\n    const auth = useContext(AuthContext);\r\n    let commentsLength = 0;\r\n\r\n    // set state of showing comments\r\n    const commentsClickHandler = () => {\r\n        setShowComments(!showComments);\r\n    };\r\n\r\n    // set comments for post\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const responseData = await sendRequest(\r\n            `${process.env.REACT_APP_SERVER_URL}/posts/${props.id}/comments`,\r\n            \"GET\",\r\n            );\r\n            setComments(responseData);\r\n        }\r\n        fetchData();\r\n    }, [comments.length, props.id]);\r\n\r\n    const newCommentHandler = (event) => {\r\n        setNewComment(event.target.value);\r\n    };\r\n\r\n    const refreshComments = async (comments) => {\r\n        setComments(comments);\r\n    };\r\n\r\n    // allows user to submit comment with enter key\r\n    const keyDownHandler = async (event) => {\r\n        if (event.keyCode === 13) {\r\n            const responseData = await sendRequest(            \r\n                `${process.env.REACT_APP_SERVER_URL}/posts/${props.id}/comments/add`,\r\n                \"POST\",\r\n                JSON.stringify({comment: newComment, creator: auth.fullName, creatorID: auth.userId}),\r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            );\r\n            setNewComment(\"\");\r\n            setComments(responseData);\r\n        }\r\n    };\r\n\r\n    const convertMongoDate = (date) => {\r\n        // 2021-12-02T18:28:33.463Z\r\n        let time = date.substring(11, 16);\r\n        let year = date.substring(0, 4);\r\n        let month = date.substring(5, 7);\r\n        let day = date.substring(8, 10);\r\n        return `${time} ${month}/${day}/${year}`;\r\n    };\r\n\r\n    return (\r\n        <div style={{marginBottom: \"2rem\"}}>\r\n            <Paper style={{padding: \"2rem\", paddingBottom: \"1rem\"}} elevation={2}>\r\n                <div style={{paddingBottom: \"1rem\"}}>\r\n                    <div style={{display: \"inline-block\", fontSize: \"1.5rem\", fontWeight:\"bold\"}}>{props.title}</div>\r\n                    <div style={{fontStyle: \"italic\", display: \"inline-block\", fontSize: \"0.75rem\", marginLeft: \"3rem\"}}>{props.author}</div>\r\n                    <div style={{display: \"inline-block\", fontSize: \"1.5rem\", float:\"right\"}}>{convertMongoDate(props.date)}</div>\r\n                </div>\r\n                <div style={{paddingBottom: \"1rem\"}}>\r\n                    {props.postBody}\r\n                </div>\r\n                <Divider />\r\n                <div style={{display: \"inline-block\", marginTop: \"0.5rem\"}}>\r\n                    <p \r\n                    onMouseEnter={()=>{document.getElementById(\"root\").style.cursor = \"pointer\"}}\r\n                    onMouseLeave={()=>{document.getElementById(\"root\").style.cursor = null}}\r\n                    onClick={commentsClickHandler}\r\n                    >\r\n                    Comments ({comments.length})\r\n                    </p>\r\n                </div>\r\n                <div style={{display: \"inline-block\", marginTop: \"0.5rem\", float: \"right\"}}>\r\n                    2 min read            \r\n                </div>\r\n                {showComments && (\r\n                    <>\r\n                    <CommentsList refreshComments={refreshComments} postID={props.id} comments={comments}/>\r\n                    {auth.isLoggedIn && (\r\n                        <TextField onKeyDown={keyDownHandler} value={newComment} onChange={newCommentHandler} fullWidth placeholder=\"Type your comment and hit enter\" style={{display:\"inline-flex\"}} />\r\n                    )}\r\n                    </>\r\n                )}\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import { Markup } from 'interweave'\r\nimport Post from './Post'\r\n\r\nconst PostsList = (props) => {\r\n    return(\r\n        <div style={{marginTop: \"3rem\"}}>\r\n        { props.posts.reverse().map(post => (\r\n            <Post key={post.id} id={post.id} title={post.title} postBody={<Markup content={post.postBody} />} date={post.createdAt} author={post.creator} />\r\n        ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostsList;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Welcome from \"../components/Welcome\";\r\nimport PostsList from \"../components/PostsList\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst MainPage = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [posts, setPosts] = useState([]);\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(async () => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_SERVER_URL}/posts/all`,\r\n          \"GET\",\r\n        );\r\n        setPosts(responseData);\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      } \r\n    };\r\n    fetchData();\r\n  }, [posts.length]);\r\n\r\n  async function createPostClickHandler() {\r\n    navigate(\"/create\");\r\n  }\r\n\r\n  async function deleteHandler() {\r\n    const responseData = await sendRequest(\r\n      `${process.env.REACT_APP_SERVER_URL}/posts/`,\r\n      \"DELETE\",\r\n      );\r\n\r\n\r\n    setPosts([]);\r\n  }\r\n\r\n  const welcomeString =\r\n    \"Vitae tortor condimentum lacinia quis vel eros donec ac. Duis at consectetur lorem donec massa. Sollicitudin ac orci phasellus egestas tellus rutrum tellus. Elit ut aliquam purus sit. Quisque egestas diam in arcu cursus euismod.\";\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {auth.isLoggedIn && (\r\n          <Button onClick={createPostClickHandler}>Create Post</Button>\r\n        )}\r\n        <Welcome text={welcomeString} />\r\n        <PostsList posts={posts} />\r\n        {auth.isLoggedIn && auth.userType==='admin' && (\r\n          <Button onClick={deleteHandler}>Delete All Posts</Button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import AppBar from \"@mui/material/AppBar\";\r\nimport ToolBar from \"@mui/material/Toolbar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst loginTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n\r\nconst registerTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Toolbar = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <AppBar position=\"absolute\" display=\"flex\">\r\n      <ToolBar>\r\n        <div style={{ display: \"contents\", float: \"left\" }}>\r\n          <ThemeProvider theme={loginTheme}>\r\n            <Typography\r\n              color=\"primary\"\r\n              component={Link}\r\n              to={\"/\"}\r\n              style={{\r\n                textDecoration: \"none\",\r\n                flex: 1,\r\n                padding: \"1rem\",\r\n                paddingLeft: \"0\",\r\n              }}\r\n              variant=\"h3\"\r\n            >\r\n              blog.js\r\n            </Typography>\r\n          </ThemeProvider>\r\n        </div>\r\n        <div style={{ display: \"flex\", float: \"right\" }}>\r\n          {!auth.isLoggedIn && (\r\n            <React.Fragment>\r\n              <ThemeProvider theme={loginTheme}>\r\n                <Link to=\"/login\">\r\n                  <Button style={{ float: \"right\" }} color=\"primary\">\r\n                    Login\r\n                  </Button>\r\n                </Link>\r\n              </ThemeProvider>\r\n              <ThemeProvider theme={registerTheme}>\r\n                <Link to=\"/register\">\r\n                  <Button style={{ float: \"right\" }} color=\"primary\">\r\n                    Register\r\n                  </Button>\r\n                </Link>\r\n              </ThemeProvider>\r\n            </React.Fragment>\r\n          )}\r\n          {auth.isLoggedIn && (\r\n            <React.Fragment>\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  paddingRight: \"5rem\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                Hello, {auth.firstName}\r\n              </div>\r\n              <ThemeProvider theme={loginTheme}>\r\n                <Link to=\"/logout\">\r\n                  <Button style={{ float: \"right\" }} color=\"primary\">\r\n                    Logout\r\n                  </Button>\r\n                </Link>\r\n              </ThemeProvider>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </ToolBar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright © \"}\r\n      Andrew Gasparovich\r\n      {\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nconst Login = () => {\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const navigate = useNavigate();\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const responseData = await sendRequest(\r\n      `${process.env.REACT_APP_SERVER_URL}/users/login`,\r\n      \"POST\",\r\n      JSON.stringify({\r\n        email: enteredEmail,\r\n        password: enteredPassword,\r\n      }),\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    );\r\n\r\n    auth.login(responseData.userId, responseData.token, responseData.userName, responseData.userType, responseData.fullName);\r\n    navigate(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container className=\"mainBody\" component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n            sx={{ mt: 1 }}\r\n          >\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={handleEmailChange}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handlePasswordChange}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"../register\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import * as React from \"react\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nconst Register = () => {\r\n  const [enteredFName, setEnteredFName] = useState(\"\");\r\n  const [enteredLName, setEnteredLName] = useState(\"\");\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const navigate = useNavigate();\r\n\r\n  const fNameHandler = (event) => {\r\n    setEnteredFName(event.target.value);\r\n  };\r\n  const lNameHandler = (event) => {\r\n    setEnteredLName(event.target.value);\r\n  };\r\n  const passwordHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n  };\r\n  const emailHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    console.log(data.values);\r\n\r\n    try {\r\n      const responseData2 = await sendRequest(\r\n      \"http://localhost:5000/api/users/register\",\r\n      \"POST\",\r\n      JSON.stringify({\r\n        firstName: enteredFName,\r\n        lastName: enteredLName,\r\n        email: enteredEmail,\r\n        password: enteredPassword,\r\n        userType: \"user\"\r\n      }),\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    );\r\n\r\n    const responseData = await sendRequest(\r\n      `${process.env.REACT_APP_SERVER_URL}/users/login`,\r\n      \"POST\",\r\n      JSON.stringify({\r\n        email: enteredEmail,\r\n        password: enteredPassword,\r\n      }),\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    );\r\n    auth.login(responseData.userId, responseData.token, responseData.userName, responseData.userType);\r\n    } catch (err) {}\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"given-name\"\r\n                  name=\"firstName\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  value={enteredFName}\r\n                  onChange={fNameHandler}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"family-name\"\r\n                  value={enteredLName}\r\n                  onChange={lNameHandler}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  value={enteredEmail}\r\n                  onChange={emailHandler}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  value={enteredPassword}\r\n                  onChange={passwordHandler}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                  }\r\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 5 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport Welcome from \"../../posts/components/Welcome\";\r\nimport \"./CreatePost.css\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { ServerURL } from \"../../shared/server-config\";\r\n\r\nconst CreatePost = () => {\r\n  const [convertedText, setConvertedText] = useState(\"\");\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const navigate = useNavigate();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const titleChangedHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const postChangedHandler = (event) => {\r\n    setConvertedText(event);\r\n  };\r\n\r\n  const fakeTitle = \"Test Post\";\r\n  const fakeBody = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\";\r\n\r\n  const postSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const nameData = await sendRequest(`${process.env.REACT_APP_SERVER_URL}/users/${auth.userId}`, \"GET\");\r\n      const responseData = await sendRequest(\r\n      `${process.env.REACT_APP_SERVER_URL}/posts/create`,\r\n      \"POST\",\r\n      JSON.stringify({\r\n        title: enteredTitle === \"\" ? fakeTitle : enteredTitle,\r\n        postBody: convertedText === \"\" ? fakeBody : convertedText,\r\n        creator: nameData.name,\r\n        creatorID: auth.userId,\r\n        comments: [],\r\n        reactions: [],\r\n      }),\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    );\r\n    } catch (err) {}\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Welcome text=\"\" />\r\n      <form onSubmit={postSubmitHandler}>\r\n        <div style={{ backgroundColor: \"white\" }}>\r\n          <TextField\r\n            autoFocus\r\n            type=\"text\"\r\n            style={{ display: \"flex\", marginBottom: \"1rem\" }}\r\n            id=\"outlined-basic\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Post title...\"\r\n            value={enteredTitle}\r\n            onChange={titleChangedHandler}\r\n          />\r\n        </div>\r\n        <div style={{ backgroundColor: \"white\" }}>\r\n          <ReactQuill\r\n            theme=\"snow\"\r\n            placeholder={\"Start creating your masterpiece...\"}\r\n            value={convertedText}\r\n            onChange={postChangedHandler}\r\n          />\r\n        </div>\r\n        <div className=\"container\">\r\n          <Button type=\"submit\" variant=\"contained\" size=\"large\">\r\n            Submit Post\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\n\nimport \"./App.css\";\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n  Navigate,\n} from \"react-router-dom\";\n\nimport MainPage from \"./posts/pages/MainPage\";\nimport Toolbar from \"./shared/components/Toolbar\";\nimport Login from \"./user/pages/Login\";\nimport Register from \"./user/pages/Register\";\nimport CreatePost from \"./posts/pages/CreatePost\";\nimport { AuthContext } from \"./shared/context/auth-context\";\n\nconst App = () => {\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState(false);\n  const [userName, setUsername] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [fullName, setFullname] = useState(\"\");\n\n  const login = useCallback((userId, token, userName, userType, fullName) => {\n    setToken(token);\n    setUserId(userId);\n    setUsername(userName);\n    setUserType(userType);\n    setFullname(fullName);\n    console.log(\"logged in! welcome, \" + userName + \" (\" + userType + \")\");\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setUsername(null);\n    setUserType(null);\n    console.log(\"logged out!\");\n  }, []);\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Fragment>\n      <Routes>\n        <Route path=\"/\" element={<MainPage />} exact />\n        <Route path=\"/create\" element={<CreatePost />} exact />\n      </Routes>\n      {/* <Navigate to=\"/\" /> */}\n      </Fragment>\n    );\n  } else {\n    routes = (\n      <Fragment>\n      <Routes>\n        <Route path=\"/\" element={<MainPage />} exact />\n        <Route path=\"/login\" element={<Login />} exact />\n        <Route path=\"/register\" element={<Register />} exact />\n      </Routes>\n      {/* <Navigate to=\"/login\" /> */}\n      </Fragment>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        userId: userId,\n        fullName: fullName,\n        firstName: userName,\n        userType: userType,\n        isLoggedIn: !!token,\n        token: token,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <div className=\"mainBody\">\n          <Toolbar />\n          {routes}\n        </div>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();","const ServerURL = \"http://localhost:5000/\";\r\n\r\nmodule.exports = ServerURL;"],"sourceRoot":""}