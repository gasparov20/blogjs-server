{"version":3,"sources":["posts/components/Welcome.js","shared/hooks/http-hook.js","shared/context/auth-context.js","posts/components/DeleteDialog.js","posts/components/Comment.js","posts/components/CommentsList.js","posts/components/Post.js","posts/components/PostsList.js","posts/pages/MainPage.js","posts/components/PostLite.js","posts/pages/PendingPosts.js","shared/components/Toolbar.js","user/pages/Login.js","user/pages/Register.js","user/components/UserPost.js","user/components/PostsAccordion.js","user/pages/UserProfile.js","App.js","shared/hooks/image-upload-hook.js","shared/context/alert-context.js","user/pages/EditProfile.js","user/pages/AccessDenied.js","posts/pages/CreatePost.js","reportWebVitals.js","index.js"],"names":["Welcome","props","style","margin","Paper","className","padding","elevation","fontSize","text","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","AuthContext","createContext","userId","userFirstName","userType","isLoggedIn","token","login","logout","DeleteDialog","React","open","setOpen","handleClose","event","stopPropagation","IconButton","onClick","Dialog","onClose","DialogContent","DialogContentText","id","type","DialogActions","Button","callback","autoFocus","Comment","auth","useContext","deleteHandler","process","postID","Authorization","refreshComments","display","flexDirection","paddingLeft","flexGrow","creatorID","firstName","lastName","comment","_id","CommentsList","marginTop","comments","map","Post","setComments","newComment","setNewComment","showComments","setShowComments","navigate","useNavigate","JSON","stringify","creator","keyDownHandler","keyCode","paddingTop","paddingRight","paddingBottom","alignItems","fontWeight","marginRight","title","date","time","substring","year","month","day","convertMongoDate","postBody","Divider","onMouseEnter","document","getElementById","cursor","onMouseLeave","length","Avatar","src","image","author","TextField","onKeyDown","value","onChange","target","fullWidth","placeholder","PostsList","posts","post","content","createdAt","MainPage","setPosts","busy","setBusy","fetchData","reversedPosts","reverse","Collapse","in","successAlert","Alert","variant","severity","savedAlert","justifyContent","size","LinearProgress","PostLite","marginLeft","fontStyle","float","PendingPosts","pendingPosts","setPendingPosts","currentPost","setCurrentPost","currentPostIndex","setCurrentPostIndex","numPendingPosts","numPosts","setNumPosts","reloadPosts","setReloadPosts","console","log","approveHandler","rejectHandler","Pagination","page","count","ToolBar","anchorEl","setAnchorEl","Boolean","loginTheme","createTheme","palette","primary","main","registerTheme","AppBar","Toolbar","Box","ThemeProvider","theme","Typography","textDecoration","color","component","Link","to","undefined","currentTarget","Menu","MenuListProps","MenuItem","Login","enteredEmail","setEnteredEmail","enteredPassword","setEnteredPassword","loginFailed","setLoginFailed","handleSubmit","preventDefault","shouldLogin","email","password","userName","Container","maxWidth","CssBaseline","sx","m","bgcolor","onSubmit","noValidate","mt","required","label","name","autoComplete","FormControlLabel","control","Checkbox","Grid","item","xs","mb","container","href","Register","enteredFName","setEnteredFName","enteredLName","setEnteredLName","emailInUse","setEmailInUse","FormData","responseData2","spacing","sm","UserPost","marginBottom","PostsAccordion","expanded","setExpanded","panel","Accordion","isExpanded","AccordionSummary","expandIcon","AccordionDetails","logoutTimer","UserPostsList","UserProfile","useParams","user","setUser","width","height","alignSelf","joined","formReducer","state","action","formIsValid","inputId","inputs","isValid","AlertContext","setAlert","setSavedAlert","EditProfile","alert","filePickerRef","file","setFile","previewUrl","setPreviewUrl","setIsValid","loading","changeImage","setChangeImage","removeDisabled","setRemoveDisabled","removeImage","setRemoveImage","initialInputs","initialFormValidity","useReducer","formState","dispatch","useImageUpload","inputHandler","fileReader","FileReader","onload","result","readAsDataURL","handleSave","formData","append","ref","accept","pickedFile","imageIsValid","files","click","disabled","LoadingButton","loadingPosition","startIcon","AccessDenied","CreatePost","convertedText","setConvertedText","enteredTitle","setEnteredTitle","postSubmitHandler","backgroundColor","App","setToken","setUserId","setUserType","setUserFirstName","tokenExpirationDate","setTokenExpirationDate","setSuccessAlert","userVerified","setUserVerified","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","currentDate","remainingTokenTime","setTimeout","clearTimeout","getFirstName","storedData","parse","getItem","routes","postSubmitted","profileSaved","exact","path","element","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","alertOptions","position","positions","TOP_CENTER","timeout","offset","transition","transitions","FADE","alertStyle","borderRadius","boxShadow","fontFamily","boxSizing","ReactDOM","render","StrictMode","template","options","close","flex","remove"],"mappings":"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","file":"static/js/main.b0a4406f.chunk.js","sourcesContent":["import Paper from \"@mui/material/Paper\";\r\nimport \"./Welcome.css\";\r\n\r\nconst Welcome = (props) => {\r\n  return (\r\n    <div style={{ margin: \"50px\" }}>\r\n      <Paper className=\"center-div\" style={{ padding: \"30px\" }} elevation={2}>\r\n        <p style={{ fontSize: \"1.25rem\" }}>{props.text}</p>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import { useState, useCallback, useEffect, useRef } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        throw err;\r\n      }\r\n      setIsLoading(false);\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  userId: null,\r\n  userFirstName: null,\r\n  userType: null,\r\n  isLoggedIn: false,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nexport default function DeleteDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = (event) => {\r\n    event.stopPropagation();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    event.stopPropagation();\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDelete = (event) => {\r\n    event.stopPropagation();\r\n    setOpen(false);\r\n    props.callback();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton aria-label=\"delete\" onClick={handleClickOpen}>\r\n        <DeleteIcon />\r\n      </IconButton>\r\n      {/* <DeleteIcon\r\n        onMouseEnter={() => {\r\n          document.getElementById(\"root\").style.cursor = \"pointer\";\r\n        }}\r\n        onMouseLeave={() => {\r\n          document.getElementById(\"root\").style.cursor = null;\r\n        }}\r\n        onClick={handleClickOpen}\r\n      /> */}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete this {props.type}?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>No</Button>\r\n          <Button onClick={handleDelete} autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { useContext, useCallback, useState } from \"react\";\r\nimport DeleteDialog from \"./DeleteDialog\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./Comment.css\";\r\n\r\nconst Comment = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { sendRequest } = useHttpClient();\r\n  const [rowHighlight, setRowHighlight] = useState();\r\n\r\n  // sends request to server to delete a comment\r\n  const deleteHandler = useCallback(async () => {\r\n    const responseData = await sendRequest(\r\n      `${process.env.REACT_APP_SERVER_URL}/posts/${props.postID}/comments/${props.id}`,\r\n      \"DELETE\",\r\n      null,\r\n      {\r\n        Authorization: \"Bearer \" + auth.token,\r\n      }\r\n    );\r\n    props.refreshComments(responseData);\r\n  }, [sendRequest, auth.token, props]);\r\n\r\n  return (\r\n    <div\r\n      className=\"comment-row\"\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n      }}\r\n      key={props.id}\r\n    >\r\n      <p\r\n        style={{\r\n          paddingLeft: \"10px\",\r\n          flexGrow: \"1\",\r\n        }}\r\n      >\r\n        {!!props.creatorID && (\r\n          <strong>\r\n            {`${props.creatorID.firstName} ${props.creatorID.lastName}`}:{\" \"}\r\n          </strong>\r\n        )}\r\n        {props.comment}\r\n      </p>\r\n      {(auth.userType === \"admin\" ||\r\n        auth.userId === props.creatorID._id ||\r\n        auth.userId === props.creatorID._id) && (\r\n        <DeleteDialog type=\"comment\" callback={deleteHandler} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import Comment from \"./Comment\";\r\n\r\nconst CommentsList = (props) => {\r\n  return (\r\n    <div style={{ marginTop: \"20px\" }}>\r\n      {props.comments.map((comment) => (\r\n        <Comment\r\n          refreshComments={props.refreshComments}\r\n          postID={props.postID}\r\n          key={comment._id || comment.id}\r\n          id={comment._id || comment.id}\r\n          comment={comment.comment}\r\n          creatorID={comment.creatorID}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentsList;\r\n","import { Paper, Avatar, Divider, TextField } from \"@mui/material\";\r\nimport { useState, useContext, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport CommentsList from \"./CommentsList\";\r\nimport DeleteDialog from \"./DeleteDialog\";\r\nimport \"./Post.css\";\r\n\r\nconst Post = (props) => {\r\n  const { sendRequest } = useHttpClient();\r\n  const [comments, setComments] = useState(props.comments);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [showComments, setShowComments] = useState(false);\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  // set state of showing comments\r\n  const commentsClickHandler = () => {\r\n    setShowComments(!showComments);\r\n  };\r\n\r\n  const newCommentHandler = (event) => {\r\n    setNewComment(event.target.value);\r\n  };\r\n\r\n  const refreshComments = async (comments) => {\r\n    setComments(comments);\r\n  };\r\n\r\n  // sends request to server to delete a post\r\n  const deleteHandler = useCallback(async () => {\r\n    const responseData = await sendRequest(\r\n      `${process.env.REACT_APP_SERVER_URL}/posts/${props.id}`,\r\n      \"DELETE\",\r\n      JSON.stringify({\r\n        creatorID: props.creator._id,\r\n      }),\r\n      {\r\n        Authorization: \"Bearer \" + auth.token,\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    );\r\n    props.callback();\r\n  }, [sendRequest, auth.token, props]);\r\n\r\n  // allows user to submit comment with enter key\r\n  const keyDownHandler = async (event) => {\r\n    if (event.keyCode === 13) {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/posts/${props.id}/comments/add`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          comment: newComment,\r\n          creatorID: auth.userId,\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      setNewComment(\"\");\r\n      setComments(responseData);\r\n    }\r\n  };\r\n\r\n  const convertMongoDate = (date) => {\r\n    let time = date.substring(11, 16);\r\n    let year = date.substring(0, 4);\r\n    let month = date.substring(5, 7);\r\n    let day = date.substring(8, 10);\r\n    return `${time} ${month}/${day}/${year}`;\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"50px\" }}>\r\n      <Paper\r\n        className=\"center-div\"\r\n        style={{\r\n          paddingLeft: \"30px\",\r\n          paddingTop: \"10px\",\r\n          paddingRight: \"30px\",\r\n          paddingBottom: \"15px\",\r\n        }}\r\n        elevation={2}\r\n      >\r\n        <div\r\n          className=\"title\"\r\n          style={{ display: \"flex\", alignItems: \"center\" }}\r\n        >\r\n          <p\r\n            style={{\r\n              fontSize: \"24px\",\r\n              fontWeight: \"500\",\r\n\r\n              marginRight: \"50px\",\r\n            }}\r\n          >\r\n            {props.title}\r\n          </p>\r\n          <div style={{ flexGrow: \"1\" }}></div>\r\n          <p style={{ fontSize: \"18px\", marginRight: \"20px\" }}>\r\n            {convertMongoDate(props.date)}\r\n          </p>\r\n          {((auth.userType && auth.userType === \"admin\") ||\r\n            (auth.userId &&\r\n              (auth.userId === props.creator.id ||\r\n                auth.userId === props.creator._id))) && (\r\n            <DeleteDialog type=\"post\" callback={deleteHandler} />\r\n          )}\r\n        </div>\r\n        <div\r\n          style={{\r\n            fontSize: \"18px\",\r\n            paddingBottom: \"10px\",\r\n          }}\r\n        >\r\n          {props.postBody}\r\n        </div>\r\n        <Divider style={{ margin: \"15px\" }} />\r\n        <div style={{ display: \"flex\" }}>\r\n          <p\r\n            onMouseEnter={() => {\r\n              document.getElementById(\"root\").style.cursor = \"pointer\";\r\n            }}\r\n            onMouseLeave={() => {\r\n              document.getElementById(\"root\").style.cursor = null;\r\n            }}\r\n            onClick={commentsClickHandler}\r\n          >\r\n            Comments ({comments.length})\r\n          </p>\r\n          <div style={{ flexGrow: 1, alignItems: \"right\" }}></div>\r\n          <div\r\n            className=\"user\"\r\n            onMouseEnter={() => {\r\n              document.getElementById(\"root\").style.cursor = \"pointer\";\r\n            }}\r\n            onMouseLeave={() => {\r\n              document.getElementById(\"root\").style.cursor = null;\r\n            }}\r\n            onClick={() => {\r\n              navigate(`/users/${props.creator._id || props.creator.id}`);\r\n            }}\r\n          >\r\n            <div className=\"p\">\r\n              <Avatar\r\n                src={\r\n                  props.creator.image === \"\"\r\n                    ? \"\"\r\n                    : `${process.env.REACT_APP_STATIC_URL}${props.creator.image}`\r\n                }\r\n              />\r\n            </div>\r\n            <p\r\n              style={{\r\n                fontSize: \"14px\",\r\n                fontWeight: \"600\",\r\n                paddingLeft: \"10px\",\r\n              }}\r\n            >\r\n              {props.author}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {showComments && (\r\n          <>\r\n            {comments.length > 0 && (\r\n              <CommentsList\r\n                refreshComments={refreshComments}\r\n                postID={props.id}\r\n                comments={comments}\r\n              />\r\n            )}\r\n            {!auth.isLoggedIn && comments.length === 0 && (\r\n              <p style={{ display: \"inline-block\", paddingLeft: \"20px\" }}>\r\n                No comments yet, log in to post one.\r\n              </p>\r\n            )}\r\n            {!auth.isLoggedIn && comments.length > 0 && (\r\n              <p style={{ display: \"inline-block\", paddingLeft: \"20px\" }}>\r\n                Log in to join the conversation.\r\n              </p>\r\n            )}\r\n            {auth.token === \"unverified\" && comments.length > 0 && (\r\n              <p style={{ display: \"inline-block\", paddingLeft: \"20px\" }}>\r\n                Verify your account to join the conversation.\r\n              </p>\r\n            )}\r\n            {auth.isLoggedIn && auth.token !== \"unverified\" && (\r\n              <div\r\n                style={{\r\n                  marginTop: \"20px\",\r\n                }}\r\n              >\r\n                <TextField\r\n                  onKeyDown={keyDownHandler}\r\n                  value={newComment}\r\n                  onChange={newCommentHandler}\r\n                  fullWidth\r\n                  placeholder=\"Type your comment and hit enter\"\r\n                  style={{ display: \"inline-flex\" }}\r\n                />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { Markup } from \"interweave\";\r\nimport Post from \"./Post\";\r\n\r\nconst PostsList = (props) => {\r\n  return (\r\n    <>\r\n      {props.posts.map((post) => (\r\n        <Post\r\n          key={post._id || post.id}\r\n          id={post._id || post.id}\r\n          title={post.title}\r\n          postBody={<Markup content={post.postBody} />}\r\n          comments={post.comments}\r\n          date={post.createdAt}\r\n          author={`${post.creatorID.firstName} ${post.creatorID.lastName}`}\r\n          creator={post.creatorID}\r\n          callback={props.callback}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostsList;\r\n","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Button, LinearProgress, Alert, Collapse } from \"@mui/material\";\r\nimport Welcome from \"../components/Welcome\";\r\nimport PostsList from \"../components/PostsList\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"../../shared/style.css\";\r\n\r\nconst MainPage = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [posts, setPosts] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n  const [pendingPosts, setPendingPosts] = useState();\r\n  const [busy, setBusy] = useState(false);\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setBusy(true);\r\n    let responseData;\r\n    try {\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/posts/all`,\r\n        \"GET\"\r\n      );\r\n    } catch (err) {}\r\n    const reversedPosts = responseData.reverse();\r\n    setPosts(reversedPosts);\r\n    setBusy(false);\r\n  }, [sendRequest]);\r\n\r\n  // Retrieve all posts when mounted\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n  const welcomeString =\r\n    \"Vitae tortor condimentum lacinia quis vel eros donec ac. Duis at consectetur lorem donec massa. Sollicitudin ac orci phasellus egestas tellus rutrum tellus. Elit ut aliquam purus sit. Quisque egestas diam in arcu cursus euismod.\";\r\n\r\n  return (\r\n    <>\r\n      <Collapse in={props.successAlert}>\r\n        <Alert variant=\"filled\" severity=\"success\">\r\n          Your post has been submitted! All posts must go through our moderation\r\n          team before being published.\r\n        </Alert>\r\n      </Collapse>\r\n      <Collapse in={props.savedAlert}>\r\n        <Alert variant=\"filled\" severity=\"success\">\r\n          Your profile has been saved!\r\n        </Alert>\r\n      </Collapse>\r\n      {auth.token === \"unverified\" && (\r\n        <Alert severity=\"info\" variant=\"filled\">\r\n          Welcome to The Blog! Please ask Andrew to verify your account to start\r\n          posting and commenting (email verification under construction).\r\n        </Alert>\r\n      )}\r\n      <Collapse in={!props.successAlert && !props.savedAlert}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          {auth.isLoggedIn && auth.token != \"unverified\" && (\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              onClick={() => {\r\n                navigate(\"/create\");\r\n              }}\r\n            >\r\n              Create Post\r\n            </Button>\r\n          )}\r\n\r\n          {auth.userType === \"admin\" && (\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              onClick={() => {\r\n                navigate(\"/publish\");\r\n              }}\r\n            >\r\n              Moderate Posts\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Collapse>\r\n      <Welcome text={welcomeString} />\r\n      {busy ? (\r\n        <LinearProgress />\r\n      ) : (\r\n        <PostsList callback={fetchData} posts={posts} />\r\n      )}\r\n      <div className=\"footer\">Copyright &copy; 2022 Andrew Gasparovich</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import Paper from \"@mui/material/Paper\";\r\nimport \"./Post.css\";\r\n\r\nconst PostLite = (props) => {\r\n  const convertMongoDate = (date) => {\r\n    // 2021-12-02T18:28:33.463Z\r\n    let time = date.substring(11, 16);\r\n    let year = date.substring(0, 4);\r\n    let month = date.substring(5, 7);\r\n    let day = date.substring(8, 10);\r\n    return `${time} ${month}/${day}/${year}`;\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"50px\" }}>\r\n      <Paper className=\"center-div\" style={{ padding: \"30px\" }} elevation={2}>\r\n        <div className=\"post-header\">\r\n          <p\r\n            style={{\r\n              fontSize: \"24px\",\r\n              fontWeight: \"500\",\r\n              marginLeft: \"20px\",\r\n              marginRight: \"50px\",\r\n            }}\r\n          >\r\n            {props.title}\r\n          </p>\r\n          <p style={{ fontSize: \"14px\", fontStyle: \"italic\" }}>\r\n            {props.author}\r\n          </p>\r\n          <div style={{ flexGrow: 1 }}></div>\r\n          <p style={{ fontSize: \"18px\", float: \"right\", marginRight: \"20px\" }}>\r\n            {convertMongoDate(props.date)}\r\n          </p>\r\n        </div>\r\n        <p\r\n          style={{\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          {props.postBody}\r\n        </p>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostLite;\r\n","import { Markup } from \"interweave\";\r\nimport {\r\n  LinearProgress,\r\n  Container,\r\n  Pagination,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport PostLite from \"../components/PostLite\";\r\nimport Welcome from \"../components/Welcome\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst PendingPosts = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [pendingPosts, setPendingPosts] = useState([]); // need this\r\n  const [currentPost, setCurrentPost] = useState(); // need this\r\n  const [currentPostIndex, setCurrentPostIndex] = useState(0); // might not need\r\n  const [numPosts, setNumPosts] = useState(props.numPendingPosts); // need this\r\n  const [reloadPosts, setReloadPosts] = useState(false); // might not need\r\n  const [busy, setBusy] = useState(true);\r\n\r\n  // get pending posts\r\n  useEffect(() => {\r\n    setBusy(true);\r\n    let responseData;\r\n    const fetchData = async () => {\r\n      try {\r\n        responseData = await sendRequest(\r\n          `${process.env.REACT_APP_SERVER_URL}/posts/pending/all`,\r\n          \"GET\",\r\n          null,\r\n          { Authorization: \"Bearer \" + auth.token }\r\n        );\r\n      } catch (err) {\r\n        console.log(\"Fetch all posts: \" + err.message);\r\n      } finally {\r\n        console.log(responseData);\r\n        if (responseData.length === 0) {\r\n          setNumPosts(0);\r\n          setPendingPosts([]);\r\n          setCurrentPost();\r\n        } else {\r\n          if (responseData.length !== numPosts) {\r\n            setNumPosts(responseData.length);\r\n          }\r\n          setPendingPosts(responseData);\r\n          setCurrentPost(responseData[currentPostIndex]);\r\n        }\r\n        setBusy(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [reloadPosts, auth.token, currentPostIndex, numPosts, sendRequest]);\r\n\r\n  const approveHandler = async () => {\r\n    let responseData;\r\n    try {\r\n      setBusy(true);\r\n      // add post to published posts\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/posts/publish/${currentPost.id}`,\r\n        \"PUT\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(\"Approve post: \" + err.message);\r\n    } finally {\r\n      setBusy(false);\r\n      setReloadPosts(!reloadPosts);\r\n    }\r\n  };\r\n\r\n  const rejectHandler = async () => {\r\n    let responseData;\r\n    try {\r\n      setBusy(true);\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/posts/${currentPost.id}`,\r\n        \"DELETE\",\r\n        {\r\n          creatorID: currentPost.creatorID._id,\r\n        },\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(\"Reject post: \" + err.message);\r\n    } finally {\r\n      setBusy(false);\r\n      setReloadPosts(!reloadPosts);\r\n    }\r\n  };\r\n\r\n  const handlePagination = (event, page) => {\r\n    setCurrentPostIndex(page - 1);\r\n  };\r\n\r\n  return busy ? (\r\n    <div className=\"center-div\">\r\n      <LinearProgress />\r\n    </div>\r\n  ) : numPosts === 0 ? (\r\n    <Welcome text={\"No posts to moderate.\"} />\r\n  ) : (\r\n    <>\r\n      <Welcome\r\n        text={`You currently have ${numPosts} pending posts. When all posts have been evaluated, there may be more.`}\r\n      />\r\n      <PostLite\r\n        key={pendingPosts[currentPostIndex].id}\r\n        title={pendingPosts[currentPostIndex].title}\r\n        postBody={<Markup content={pendingPosts[currentPostIndex].postBody} />}\r\n        date={pendingPosts[currentPostIndex].createdAt}\r\n        author={`${pendingPosts[currentPostIndex].creatorID.firstName} ${pendingPosts[currentPostIndex].creatorID.lastName}`}\r\n      />\r\n      <div className=\"center\">\r\n        <Button size=\"large\" onClick={approveHandler}>\r\n          Approve\r\n        </Button>\r\n        <Button size=\"large\" onClick={rejectHandler}>\r\n          Reject\r\n        </Button>\r\n      </div>\r\n      <div className=\"center\">\r\n        <Pagination\r\n          onChange={handlePagination}\r\n          count={numPosts}\r\n          size=\"large\"\r\n          variant=\"text\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PendingPosts;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Toolbar,\r\n  AppBar,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst ToolBar = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const loginTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#ffffff\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const registerTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#ffffff\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const registerClickHandler = () => {\r\n    navigate(\"/register\");\r\n  };\r\n\r\n  const loginClickHandler = () => {\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setAnchorEl(null);\r\n    auth.logout();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleEditProfile = () => {\r\n    setAnchorEl(null);\r\n    navigate(\"/editprofile\");\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar>\r\n      <Toolbar>\r\n        <Box display=\"flex\" flexGrow={1}>\r\n          <ThemeProvider theme={loginTheme}>\r\n            <Typography\r\n              style={{ textDecoration: \"none\" }}\r\n              color=\"primary\"\r\n              component={Link}\r\n              to={\"/\"}\r\n              variant=\"h3\"\r\n            >\r\n              blog.js\r\n            </Typography>\r\n          </ThemeProvider>\r\n        </Box>\r\n        {!auth.isLoggedIn && (\r\n          <>\r\n            <ThemeProvider theme={loginTheme}>\r\n              <Button color=\"primary\" onClick={loginClickHandler}>\r\n                Login\r\n              </Button>\r\n            </ThemeProvider>\r\n            <ThemeProvider theme={registerTheme}>\r\n              <Button color=\"primary\" onClick={registerClickHandler}>\r\n                Register\r\n              </Button>\r\n            </ThemeProvider>\r\n          </>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n          <>\r\n            <p style={{ marginRight: \"30px\" }}>Hello, {auth.userFirstName}</p>\r\n            <div>\r\n              <ThemeProvider theme={loginTheme}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  id=\"basic-button\"\r\n                  aria-controls={open ? \"basic-menu\" : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded={open ? \"true\" : undefined}\r\n                  onClick={handleClick}\r\n                >\r\n                  My Account\r\n                </Button>\r\n              </ThemeProvider>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  \"aria-labelledby\": \"basic-button\",\r\n                }}\r\n              >\r\n                <MenuItem onClick={handleEditProfile}>Edit Profile</MenuItem>\r\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default ToolBar;\r\n","import { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst theme = createTheme();\r\n\r\nconst Login = () => {\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const [loginFailed, setLoginFailed] = useState(false);\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const navigate = useNavigate();\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoginFailed(false);\r\n    let shouldLogin = true;\r\n    let responseData;\r\n    try {\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/users/login`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n    } catch (err) {\r\n      shouldLogin = false;\r\n      setLoginFailed(true);\r\n    }\r\n    if (shouldLogin) {\r\n      auth.login(\r\n        responseData.userId,\r\n        responseData.token,\r\n        responseData.userName,\r\n        responseData.userType,\r\n        null\r\n      );\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container className=\"mainBody\" component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n            sx={{ mt: 1 }}\r\n          >\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={handleEmailChange}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handlePasswordChange}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            {loginFailed && (\r\n              <Grid item xs={12}>\r\n                <Alert severity=\"error\">\r\n                  Could not find a user with those credentials.\r\n                </Alert>\r\n              </Grid>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"../register\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import * as React from \"react\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst theme = createTheme();\r\n\r\nconst Register = () => {\r\n  const [enteredFName, setEnteredFName] = useState(\"\");\r\n  const [enteredLName, setEnteredLName] = useState(\"\");\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const navigate = useNavigate();\r\n  const [emailInUse, setEmailInUse] = useState(false);\r\n\r\n  const fNameHandler = (event) => {\r\n    setEnteredFName(event.target.value);\r\n  };\r\n  const lNameHandler = (event) => {\r\n    setEnteredLName(event.target.value);\r\n  };\r\n  const passwordHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n  };\r\n  const emailHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    try {\r\n      const responseData2 = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/users/register`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          firstName: enteredFName,\r\n          lastName: enteredLName,\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      console.log(responseData2);\r\n      if (responseData2.message) {\r\n        if (responseData2.message === \"email address already in use\") {\r\n          setEmailInUse(true);\r\n          return;\r\n        }\r\n      }\r\n\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/users/login`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      auth.login(\r\n        responseData.userId,\r\n        responseData.token,\r\n        responseData.userName,\r\n        responseData.userType\r\n      );\r\n    } catch (err) {}\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const login = async () => {};\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"given-name\"\r\n                  name=\"firstName\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  value={enteredFName}\r\n                  onChange={fNameHandler}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"family-name\"\r\n                  value={enteredLName}\r\n                  onChange={lNameHandler}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  value={enteredEmail}\r\n                  onChange={emailHandler}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  value={enteredPassword}\r\n                  onChange={passwordHandler}\r\n                />\r\n              </Grid>\r\n              {emailInUse && (\r\n                <Grid item xs={12}>\r\n                  <Alert severity=\"error\">Email address already in use.</Alert>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/login\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { Paper, Avatar, Divider, TextField } from \"@mui/material\";\r\nimport { useState, useContext, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport CommentsList from \"../../posts/components/CommentsList\";\r\nimport DeleteDialog from \"../../posts/components/DeleteDialog\";\r\nimport { Markup } from \"interweave\";\r\nimport \"../../posts/components/Post.css\";\r\n\r\nconst UserPost = (props) => {\r\n  const { sendRequest } = useHttpClient();\r\n  const [comments, setComments] = useState(props.post.comments);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [showComments, setShowComments] = useState(false);\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  // set state of showing comments\r\n  const commentsClickHandler = () => {\r\n    setShowComments(!showComments);\r\n  };\r\n\r\n  const newCommentHandler = (event) => {\r\n    setNewComment(event.target.value);\r\n  };\r\n\r\n  const refreshComments = async (comments) => {\r\n    setComments(comments);\r\n  };\r\n\r\n  // allows user to submit comment with enter key\r\n  const keyDownHandler = async (event) => {\r\n    if (event.keyCode === 13) {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/posts/${props.id}/comments/add`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          comment: newComment,\r\n          creatorID: auth.userId,\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      setNewComment(\"\");\r\n      setComments(responseData);\r\n    }\r\n  };\r\n\r\n  const convertMongoDate = (date) => {\r\n    let time = date.substring(11, 16);\r\n    let year = date.substring(0, 4);\r\n    let month = date.substring(5, 7);\r\n    let day = date.substring(8, 10);\r\n    return `${time} ${month}/${day}/${year}`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ marginLeft: \"20px\", marginBottom: \"20px\", marginRight: \"20px\" }}\r\n    >\r\n      <div\r\n        style={{\r\n          fontSize: \"18px\",\r\n        }}\r\n      >\r\n        {<Markup content={props.post.postBody} />}\r\n      </div>\r\n      <Divider style={{ margin: \"15px\" }} />\r\n      <p\r\n        onMouseEnter={() => {\r\n          document.getElementById(\"root\").style.cursor = \"pointer\";\r\n        }}\r\n        onMouseLeave={() => {\r\n          document.getElementById(\"root\").style.cursor = null;\r\n        }}\r\n        onClick={commentsClickHandler}\r\n      >\r\n        Comments ({comments.length})\r\n      </p>\r\n      {showComments && (\r\n        <>\r\n          {comments.length > 0 && (\r\n            <CommentsList\r\n              refreshComments={refreshComments}\r\n              postID={props.id}\r\n              comments={comments}\r\n            />\r\n          )}\r\n          {!auth.isLoggedIn && comments.length === 0 && (\r\n            <p style={{ display: \"inline-block\", paddingLeft: \"20px\" }}>\r\n              No comments yet, log in to post one.\r\n            </p>\r\n          )}\r\n          {!auth.isLoggedIn && comments.length > 0 && (\r\n            <p style={{ display: \"inline-block\", paddingLeft: \"20px\" }}>\r\n              Log in to join the conversation.\r\n            </p>\r\n          )}\r\n          {auth.token === \"unverified\" && comments.length > 0 && (\r\n            <p style={{ display: \"inline-block\", paddingLeft: \"20px\" }}>\r\n              Verify your account to join the conversation.\r\n            </p>\r\n          )}\r\n          {auth.isLoggedIn && auth.token !== \"unverified\" && (\r\n            <div\r\n              style={{\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                onKeyDown={keyDownHandler}\r\n                value={newComment}\r\n                onChange={newCommentHandler}\r\n                fullWidth\r\n                placeholder=\"Type your comment and hit enter\"\r\n                style={{ display: \"inline-flex\" }}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPost;\r\n","import { useState, useContext, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport UserPost from \"./UserPost\";\r\nimport DeleteDialog from \"../../posts/components/DeleteDialog\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nexport default function PostsAccordion(props) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const auth = useContext(AuthContext);\r\n  const { sendRequest } = useHttpClient();\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const convertMongoDate = (date) => {\r\n    let time = date.substring(11, 16);\r\n    let year = date.substring(0, 4);\r\n    let month = date.substring(5, 7);\r\n    let day = date.substring(8, 10);\r\n    return `${time} ${month}/${day}/${year}`;\r\n  };\r\n  console.log(props);\r\n  // sends request to server to delete a post\r\n  const deleteHandler = useCallback(\r\n    async (event) => {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/posts/${props.post.id}`,\r\n        \"DELETE\",\r\n        JSON.stringify({\r\n          creatorID: auth.userId,\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      props.callback();\r\n    },\r\n    [sendRequest, auth.token, props]\r\n  );\r\n\r\n  return (\r\n    <Accordion\r\n      expanded={expanded === \"panel1\"}\r\n      onChange={handleChange(\"panel1\")}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1bh-content\"\r\n        id=\"panel1bh-header\"\r\n      >\r\n        <Typography\r\n          sx={{\r\n            fontWeight: \"600\",\r\n            paddingLeft: \"10px\",\r\n            paddingRight: \"50px\",\r\n          }}\r\n        >\r\n          {props.post.title}\r\n        </Typography>\r\n        <div style={{ flexGrow: 1 }}></div>\r\n        <Typography sx={{ color: \"text.secondary\" }}>\r\n          {convertMongoDate(props.post.createdAt)}\r\n        </Typography>\r\n        {((auth.userType && auth.userType === \"admin\") ||\r\n          (auth.userId &&\r\n            (auth.userId === props.post.creatorID ||\r\n              auth.userId === props.post.creatorID))) && (\r\n          <div style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}>\r\n            <DeleteDialog type=\"post\" callback={deleteHandler} />\r\n          </div>\r\n        )}\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <UserPost post={props.post} />\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { LinearProgress, Avatar, Paper } from \"@mui/material\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Welcome from \"../../posts/components/Welcome\";\r\nimport PostsAccordion from \"../components/PostsAccordion\";\r\n\r\nconst UserPostsList = (props) => {\r\n  const { sendRequest } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  let posts = [...props.posts].reverse();\r\n  return (\r\n    <>\r\n      {posts.map((post) => (\r\n        <PostsAccordion key={post.id} post={post} callback={props.callback} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst UserProfile = () => {\r\n  const { id } = useParams();\r\n  const { sendRequest } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [busy, setBusy] = useState(true);\r\n  const [user, setUser] = useState();\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setBusy(true);\r\n    let responseData;\r\n    try {\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/users/id/${id}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n    } catch (err) {}\r\n    setUser(responseData);\r\n    setBusy(false);\r\n  }, [auth.token, id, sendRequest]);\r\n\r\n  // Retrieve user when mounted\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const convertMongoDate = (date) => {\r\n    let time = date.substring(11, 16);\r\n    let year = date.substring(0, 4);\r\n    let month = date.substring(5, 7);\r\n    let day = date.substring(8, 10);\r\n    return `${month}/${day}/${year}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {busy ? (\r\n        <LinearProgress />\r\n      ) : (\r\n        <>\r\n          <Paper style={{ padding: \"30px\" }}>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <Avatar\r\n                sx={{ width: \"150px\", height: \"150px\" }}\r\n                style={{ alignSelf: \"center\" }}\r\n                src={\r\n                  user.image === \"\"\r\n                    ? \"\"\r\n                    : `${process.env.REACT_APP_STATIC_URL}${user.image}`\r\n                }\r\n              />\r\n              <div style={{ margin: \"30px\" }}>\r\n                <p style={{ fontWeight: \"600\" }}>\r\n                  {user.firstName} {user.lastName}\r\n                </p>\r\n                <p>Location: </p>\r\n                <p>Joined: {convertMongoDate(user.joined)}</p>\r\n              </div>\r\n              <div style={{ margin: \"30px\" }}>\r\n                <p>User bio</p>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n          <br />\r\n          <UserPostsList callback={fetchData} posts={user.posts} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport \"./App.css\";\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport MainPage from \"./posts/pages/MainPage\";\nimport PendingPosts from \"./posts/pages/PendingPosts\";\nimport ToolBar from \"./shared/components/Toolbar\";\nimport Login from \"./user/pages/Login\";\nimport Register from \"./user/pages/Register\";\nimport UserProfile from \"./user/pages/UserProfile\";\nimport EditProfile from \"./user/pages/EditProfile\";\nimport AccessDenied from \"./user/pages/AccessDenied\";\nimport CreatePost from \"./posts/pages/CreatePost\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { AlertContext } from \"./shared/context/alert-context\";\nimport { useHttpClient } from \"./shared/hooks/http-hook\";\nimport { useAlert } from \"react-alert\";\n\nlet logoutTimer;\n\nconst App = () => {\n  const { sendRequest } = useHttpClient();\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState();\n  const [userType, setUserType] = useState();\n  const [userFirstName, setUserFirstName] = useState();\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [successAlert, setSuccessAlert] = useState(false);\n  const [savedAlert, setSavedAlert] = useState(false);\n  const [userVerified, setUserVerified] = useState(false);\n\n  const login = useCallback(\n    (userId, token, userFirstName, userType, expirationDate) => {\n      setUserVerified(token === \"unverified\" ? false : true);\n      setToken(token);\n      setUserId(userId);\n      setUserFirstName(userFirstName);\n      setUserType(userType);\n\n      const tokenExpirationDate =\n        expirationDate || new Date(new Date().getTime() + 3600000);\n\n      setTokenExpirationDate(tokenExpirationDate);\n\n      localStorage.setItem(\n        \"userData\",\n        JSON.stringify({\n          userId: userId,\n          token: token,\n          expiration: tokenExpirationDate.toISOString(),\n        })\n      );\n    },\n    []\n  );\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setTokenExpirationDate(null);\n    setUserFirstName(null);\n    setUserType(null);\n    setUserVerified(false);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  // calculate time remaining on existing token\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const currentDate = new Date();\n      const remainingTokenTime =\n        tokenExpirationDate.getTime() - currentDate.getTime();\n      logoutTimer = setTimeout(logout, remainingTokenTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  const getFirstName = useCallback(\n    async (userId) => {\n      let responseData;\n      try {\n        responseData = await sendRequest(\n          `${process.env.REACT_APP_SERVER_URL}/users/${userId}`,\n          \"GET\"\n        );\n      } catch (err) {}\n      setUserFirstName(responseData.firstName);\n      setUserType(responseData.userType);\n    },\n    [sendRequest]\n  );\n\n  // auto-login\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (storedData) {\n      getFirstName(storedData.userId);\n    }\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        userFirstName,\n        userType,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login, getFirstName, userFirstName, userType]);\n\n  const postSubmitted = useCallback(() => {\n    setSuccessAlert(true);\n    setTimeout(() => {\n      setSuccessAlert(false);\n    }, 5000);\n  }, []);\n\n  const profileSaved = useCallback(() => {\n    setSavedAlert(true);\n    setTimeout(() => {\n      setSavedAlert(false);\n    }, 3000);\n  }, []);\n\n  let routes;\n  if (token !== \"unverified\" && userType === \"admin\") {\n    routes = (\n      <Fragment>\n        <Routes>\n          <Route exact path=\"/users/:id\" element={<UserProfile />} />\n          <Route\n            path=\"/\"\n            element={\n              <MainPage savedAlert={savedAlert} successAlert={successAlert} />\n            }\n            exact\n          />\n          <Route path=\"/create\" element={<CreatePost />} exact />\n          <Route path=\"/editprofile\" element={<EditProfile />} exact />\n          <Route\n            path=\"/login\"\n            element={\n              <MainPage savedAlert={savedAlert} successAlert={successAlert} />\n            }\n            exact\n          />\n          <Route path=\"/publish\" element={<PendingPosts />} exact />\n        </Routes>\n      </Fragment>\n    );\n  } else if (token !== \"unverified\" && userVerified) {\n    routes = (\n      <Fragment>\n        <Routes>\n          <Route path=\"/users/:id\" element={<UserProfile />} />\n          <Route\n            path=\"/\"\n            element={\n              <MainPage savedAlert={savedAlert} successAlert={successAlert} />\n            }\n            exact\n          />\n          <Route path=\"/create\" element={<CreatePost />} exact />\n          <Route path=\"/editprofile\" element={<EditProfile />} exact />\n          <Route\n            path=\"/login\"\n            element={\n              <MainPage savedAlert={savedAlert} successAlert={successAlert} />\n            }\n            exact\n          />\n          <Route path=\"/publish\" element={<AccessDenied />} exact />\n        </Routes>\n      </Fragment>\n    );\n  } else {\n    routes = (\n      <Fragment>\n        <Routes>\n          <Route\n            exact\n            path=\"/users/:id\"\n            element={\n              token === \"unverified\" ? <UserProfile /> : <AccessDenied />\n            }\n          />\n          <Route path=\"/\" element={<MainPage />} exact />\n          <Route path=\"/create\" element={<AccessDenied />} exact />\n          <Route path=\"/editprofile\" element={<AccessDenied />} exact />\n          <Route path=\"/login\" element={<Login />} exact />\n          <Route path=\"/register\" element={<Register />} exact />\n          <Route path=\"/publish\" element={<AccessDenied />} exact />\n        </Routes>\n      </Fragment>\n    );\n  }\n\n  return (\n    <AlertContext.Provider\n      value={{\n        setAlert: postSubmitted,\n        setSavedAlert: profileSaved,\n      }}\n    >\n      <AuthContext.Provider\n        value={{\n          userId: userId,\n          userFirstName: userFirstName,\n          userType: userType,\n          isLoggedIn: !!token,\n          token: token,\n          login: login,\n          logout: logout,\n        }}\n      >\n        <Router>\n          <ToolBar />\n          <div className=\"main\">{routes}</div>\n        </Router>\n      </AuthContext.Provider>\n    </AlertContext.Provider>\n  );\n};\n\nexport default App;\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  let formIsValid = true;\r\n  for (const inputId in state.inputs) {\r\n    if (!state.inputs[inputId]) {\r\n      continue;\r\n    }\r\n    if (inputId === action.inputId) {\r\n      formIsValid = formIsValid && action.isValid;\r\n    } else {\r\n      formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n    }\r\n  }\r\n  return {\r\n    ...state,\r\n    inputs: {\r\n      ...state.inputs,\r\n      [action.inputId]: { value: action.value, isValid: action.isValid },\r\n    },\r\n    isValid: formIsValid,\r\n  };\r\n};\r\n\r\nexport const useImageUpload = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler];\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AlertContext = createContext({\r\n  setAlert: () => {},\r\n  setSavedAlert: () => {},\r\n});\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  useRef,\r\n} from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  LinearProgress,\r\n  Avatar,\r\n  Paper,\r\n  Button,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { useImageUpload } from \"../../shared/hooks/image-upload-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { AlertContext } from \"../../shared/context/alert-context\";\r\nimport Welcome from \"../../posts/components/Welcome\";\r\n\r\nconst EditProfile = (props) => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { sendRequest } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const alert = useContext(AlertContext);\r\n  const [busy, setBusy] = useState(true);\r\n  const [user, setUser] = useState();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const filePickerRef = useRef();\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [changeImage, setChangeImage] = useState(false);\r\n  const [removeDisabled, setRemoveDisabled] = useState(false);\r\n  const [removeImage, setRemoveImage] = useState(false);\r\n\r\n  const [formState, inputHandler] = useImageUpload(\r\n    {\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setBusy(true);\r\n    let responseData;\r\n    try {\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/users/id/${auth.userId}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n    } catch (err) {}\r\n    if (responseData.image === \"\") {\r\n      setPreviewUrl(\"\");\r\n      setRemoveDisabled(true);\r\n    } else {\r\n      setPreviewUrl(`${process.env.REACT_APP_STATIC_URL}${responseData.image}`);\r\n      setRemoveDisabled(false);\r\n    }\r\n    setUser(responseData);\r\n    setBusy(false);\r\n  }, [auth.token, id, sendRequest]);\r\n\r\n  // Retrieve user when mounted\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const convertMongoDate = (date) => {\r\n    let time = date.substring(11, 16);\r\n    let year = date.substring(0, 4);\r\n    let month = date.substring(5, 7);\r\n    let day = date.substring(8, 10);\r\n    return `${month}/${day}/${year}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let imageIsValid = isValid;\r\n    if (event.target.files && event.target.files.length !== 0) {\r\n      setRemoveImage(false);\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      setChangeImage(true);\r\n      setRemoveDisabled(false);\r\n      imageIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      setChangeImage(false);\r\n      imageIsValid = false;\r\n    }\r\n    setRemoveImage(false);\r\n    inputHandler(\"image\", pickedFile, imageIsValid);\r\n  };\r\n\r\n  // update user in database\r\n  const handleSave = async () => {\r\n    if (!removeImage && changeImage && (!file || !isValid)) {\r\n      return;\r\n    }\r\n    setBusy(true);\r\n    let responseData;\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      formData.append(\"removeImage\", removeImage);\r\n      responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/users/${auth.userId}`,\r\n        \"PUT\",\r\n        formData,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      setBusy(false);\r\n      alert.setSavedAlert();\r\n      navigate(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    event.stopPropagation();\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    event.stopPropagation();\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    setAnchorEl(null);\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  const handleMirror = () => {\r\n    setAnchorEl(null);\r\n    console.log(\"TO DO\");\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    setAnchorEl(null);\r\n    setRemoveDisabled(true);\r\n    setRemoveImage(true);\r\n    setPreviewUrl(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {busy ? (\r\n        <LinearProgress />\r\n      ) : (\r\n        <>\r\n          <Paper style={{ padding: \"30px\" }}>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <input\r\n                  id={auth.userId}\r\n                  ref={filePickerRef}\r\n                  style={{ display: \"none\" }}\r\n                  type=\"file\"\r\n                  accept=\".jpg,.png,.jpeg\"\r\n                  onChange={pickedHandler}\r\n                />\r\n                <Avatar\r\n                  sx={{ width: \"150px\", height: \"150px\", marginBottom: \"20px\" }}\r\n                  src={previewUrl}\r\n                />\r\n                <Button\r\n                  color=\"primary\"\r\n                  id=\"basic-button\"\r\n                  aria-controls={open ? \"basic-menu\" : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded={open ? \"true\" : undefined}\r\n                  onClick={handleClick}\r\n                >\r\n                  Change Profile Picture\r\n                </Button>\r\n                <Menu\r\n                  id=\"basic-menu\"\r\n                  anchorEl={anchorEl}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  MenuListProps={{\r\n                    \"aria-labelledby\": \"basic-button\",\r\n                  }}\r\n                >\r\n                  <MenuItem onClick={handleUpload}>Upload</MenuItem>\r\n                  <MenuItem disabled={true} onClick={handleMirror}>\r\n                    From URL\r\n                  </MenuItem>\r\n                  <MenuItem disabled={removeDisabled} onClick={handleRemove}>\r\n                    Remove\r\n                  </MenuItem>\r\n                </Menu>\r\n                <br />\r\n              </div>\r\n              <div style={{ margin: \"30px\" }}>\r\n                <p style={{ fontWeight: \"600\" }}>\r\n                  {user.firstName} {user.lastName}\r\n                </p>\r\n                <p>Location: </p>\r\n                <p>Joined: {convertMongoDate(user.joined)}</p>\r\n              </div>\r\n              <div style={{ margin: \"30px\" }}>\r\n                <p>User bio</p>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n          <div style={{ display: \"flex\", margin: \"30px\" }}>\r\n            <LoadingButton\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                handleSave(false);\r\n              }}\r\n              loading={loading}\r\n              loadingPosition=\"start\"\r\n              startIcon={<SaveIcon />}\r\n              variant=\"contained\"\r\n              sx={{ margin: \"auto\" }}\r\n            >\r\n              Save\r\n            </LoadingButton>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import Welcome from \"../../posts/components/Welcome\";\r\n\r\nconst AccessDenied = () => {\r\n  const message = \"You do not have permission to access this page.\";\r\n  return (\r\n    <>\r\n      <Welcome text={message} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccessDenied;\r\n","import { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Welcome from \"../../posts/components/Welcome\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { AlertContext } from \"../../shared/context/alert-context\";\r\nimport \"./CreatePost.css\";\r\n\r\nconst CreatePost = (props) => {\r\n  const [convertedText, setConvertedText] = useState(\"\");\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const navigate = useNavigate();\r\n  const auth = useContext(AuthContext);\r\n  const alert = useContext(AlertContext);\r\n\r\n  const titleChangedHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const postChangedHandler = (event) => {\r\n    setConvertedText(event);\r\n  };\r\n\r\n  const fakeTitle = \"Test Post\";\r\n  const fakeBody =\r\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\";\r\n\r\n  const postSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/posts/create`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          title: enteredTitle === \"\" ? fakeTitle : enteredTitle,\r\n          postBody: convertedText === \"\" ? fakeBody : convertedText,\r\n          creatorID: auth.userId,\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      alert.setAlert();\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.log(\"Create post error: \" + err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Welcome text=\"\" />\r\n      <form onSubmit={postSubmitHandler}>\r\n        <div style={{ backgroundColor: \"white\" }}>\r\n          <TextField\r\n            autoFocus\r\n            type=\"text\"\r\n            style={{ display: \"flex\", marginBottom: \"1rem\" }}\r\n            id=\"outlined-basic\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Post title...\"\r\n            value={enteredTitle}\r\n            onChange={titleChangedHandler}\r\n          />\r\n        </div>\r\n        <div style={{ backgroundColor: \"white\" }}>\r\n          <ReactQuill\r\n            theme=\"snow\"\r\n            placeholder={\"Start creating your masterpiece...\"}\r\n            value={convertedText}\r\n            onChange={postChangedHandler}\r\n          />\r\n        </div>\r\n        <div className=\"center-div-btn\">\r\n          <Button type=\"submit\" variant=\"contained\" size=\"large\">\r\n            Submit Post\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\n\nconst alertOptions = {\n  position: positions.TOP_CENTER,\n  timeout: 8000,\n  offset: \"0px\",\n  transition: transitions.FADE,\n  type: \"success\",\n};\n\nconst alertStyle = {\n  backgroundColor: \"#FFFFFF\",\n  color: \"black\",\n  padding: \"20px\",\n  borderRadius: \"10px\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  boxShadow: \"0px 2px 2px 2px rgba(0, 0, 0, 0.03)\",\n  fontFamily: \"Arial\",\n  width: \"350px\",\n  boxSizing: \"border-box\",\n};\n\nconst AlertTemplate = ({ message, options, style, close }) => {\n  return (\n    <div style={{ ...alertStyle, ...style }}>\n      <span style={{ flex: 2 }}>{message}</span>\n    </div>\n  );\n};\n\nconst closeAlert = (alert) => {\n  alert.remove(alert);\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate} {...alertOptions}>\n      <App onClick={closeAlert} />\n    </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}